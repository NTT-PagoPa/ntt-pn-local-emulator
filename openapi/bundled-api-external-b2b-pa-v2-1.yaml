openapi: 3.0.3
info:
  title: "Piattaforma Notifiche: API B2B per le Pubbliche Amministrazioni"
  description: "\n## Abstract\n  API utilizzate dalle pubbliche amministrazioni per\
    \ __inviare richieste di notifiche__ e \n  __ottenere informazioni in modalità\
    \ pull__ sullo stato della \n  _\"richiesta di notifica\"_ (accettata o rifiutata)\
    \ e, in caso di richiesta accettata, \n  sulle comunicazioni effettuate, o solo\
    \ tentate, nei confronti dei destinatari della notifica.\n\n## Operazioni utilizzate,\
    \ in sequenza temporale\n<table>\n<tr>\n<td>\n\n <img src=\"https://raw.githubusercontent.com/pagopa/pn-delivery/e6f1db9eac9ace7fc2ad0fe6de241ab4525b6b6a/docs/openapi/images/invio-notifica.png\"\
    \ height=\"790\" width=\"515\" alt=\"Invio notifica\" />\n\n   </br>\n   </br>\n\
    \   </br>\n  \n  #### 3. Verifica accettazione richiesta di invio notifica\n\n\
    \  Per questa verifica possono essere utilizzate due modalità:\n  \n  1. __richiesta\
    \ puntale__: consigliato solo ai fini di test\n  2. __lettura da stream configurato__:\
    \ consigliato per ambienti di produzione\n  \n  La differenza tra le due modalità\
    \ è nell'interazione e nell'efficienza.\n  \n  Con la modalità _\"richiesta puntuale\"\
    _ è necessario l'invocazione per ogni notifica,\n  mentre con la modalità _\"\
    stream\"_ è possibile avere gli aggiornamenti\n  di stato di più notifiche con\
    \ una sola invocazione.\n  \n  #### 3.1 Richiesta puntuale di verifica accettazione\n\
    \n  Questa modalità è resa disponibile solo ai fini di test o di eventuali operazioni\n\
    \  di allineamento poiché richiede l'invio di una richiesta per ogni notifica.\n\
    \  Se il passo (2) avviene con successo si utilizza l'operazione \n  [getNotificationRequestStatus](#/SenderReadB2B/retrieveNotificationRequestStatusV21)\n\
    \  per ottenere informazioni riguardo allo stato della \"richiesta di invio di\
    \ notifica\". </br>\n  Nel campo _notificationRequestStatus_ sarà indicato:</br>\n\
    \  >\\- <strong>WAITING:</strong> se la validazione è ancora in corso.</br>\n\
    \  \\- <strong>ACCEPTED:</strong> se richiesta di notifica accettata, lo _IUN_\
    \ è valorizzato.</br>\n  \\- <strong>REFUSED:</strong> se richiesta di notifica\
    \ rifiutata, è valorizzato il campo _errors_.</br>\n  </br>\n  </br>\n  </br>\n\
    \n  #### 3.2 Richiesta avanzamento via \"stream\" di verifica di accettazione\n\
    \n  Questa modalità è consigliata. Per essere fruita è necessaria un'operazione\
    \ preliminare \n  tramite la chiamata alla API [createEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fmain%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook.yaml#/Streams/createEventStream)\n\
    \  per configurare uno \"stream\" che registri il cambio di stato della notifica\
    \ con il seguente payload:</br></br>``\n  {\n    \"title\": \"NotificationAccepted\"\
    ,\n    \"eventType\": \"STATUS\",\n    \"filterValues\": [\n      \"ACCEPTED\"\
    \n    ]\n  }\n  ``</br></br>\n  Successivamente si possono ottenere i dati richiamando\
    \ la API [consumeEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fmain%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook.yaml#/Events/consumeEventStream)\n\
    \  \n  \n  __NOTA__ saranno disponibili i dati di cambiamento di stato occorsi\
    \ solo successivamente alla configurazione\n  dello stream.\n  \n  </br>\n  </br>\n\
    \  </br>\n  </br>\n  \n</td>\n<td>\n\n  ### Ciclo di vita della notifica lato\
    \ mittente\n  \n  #### 1. Caricamento dei documenti della notifica\n\n  Prima\
    \ di invocare la richiesta di notifica è necessario caricare i documenti della\
    \ notifica (documenti e bollettini/metadati di pagamento).\n  [Schema Metadata\
    \ F24](#/components/schemas/F24Metadata)\n\n  #### 1.a. Richiesta presigned Url\n\
    \  \n  Invocare l'operazione [presignedUploadRequest](#/NewNotification/presignedUploadRequest)\
    \ \n  con cui prenotare il caricamento. Possono essere effettuate un massimo di\
    \ <span id=\"numberOfPresignedRequest\">15</span> prenotazioni di caricamento\n\
    \  per ogni richiesta.</br>\n  In risposta si ottengono le seguenti informazioni:<br/>\n\
    \  \\- httpMethod <br/>\n  \\- secret <br/>\n  \\- url <br/>\n  L'url restituito\
    \ ha una validità di 1h.\n  \n  </br>\n\n  #### 1.b Upload documenti della notifica\n\
    \  \n  Per ogni documento utilizzare un richiesta HTTP con metodo _httpMethod_\
    \ (POST o PUT) \n  all'url indicato dal campo _url_. <br/>\n  In tale richiesta\
    \ vanno aggiunti i seguenti header: <br/>\n  \\- _content-type_: valorizzato come\
    \ il campo \"contentType\" della richiesta di cui al punto (1.a) <br/>\n  \\-\
    \ _x-amz-meta-secret_: valorizzato con il valore del campo \"secret\" della risposta\
    \ di cui al punto (1.a) <br/>\n  \\- _trailer_: valorizzato con ```x-amz-checksum-sha256```\
    \ <br/>\n  \\- _x-amz-checksum-sha256_: valorizzato con il checksum sha256, codificato\
    \ in base 64, del contenuto binario del file che verrà caricato. (__N.B.__ questo\
    \ è un trailer HTTP non un header).\n    Vedi [HTTP Trailer](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Trailer)\
    \ <br/>\n    __NOTA:__ se l'operazione di upload è stata eseguita con successo,\
    \ si otterrà come risposta _status 200 OK_. <br/>\n    Nell'header di questa risposta,\
    \ si otterrà il campo __x-amz-version-id__ che dovrà essere utilizzato durante\
    \ <br/> \n    l'inserimento della notifica, nel campo ref.__versionToken__ in\
    \ corrispondenza del documento ad esso associato.\n\n \n  </br>\n  </br>\n  </br>\n\
    \  \n  #### 2. Richiesta di invio della notifica\n\n  Per effettuare una richiesta\
    \ di invio notifica, invocare l'operazione \n  [sendNewNotification](#/NewNotification/sendNewNotificationV21)\
    \ utilizzando i riferimenti dei file \n  caricati ottenuti al punto (1.b).\n \
    \ \n  </br>\n  </br>\n  </br>\n\n   <img src=\"https://raw.githubusercontent.com/pagopa/pn-delivery/e6f1db9eac9ace7fc2ad0fe6de241ab4525b6b6a/docs/openapi/images/verifica-accettazione-richiesta-invio.png\"\
    \ height=\"731\" width=\"489\" alt=\"Verifica accettazione richiesta\" />\n</td>\n\
    \  \n</tr>\n</table>\n\n\n  ### 4. Monitorare l'avanzamento di una notifica\n\n\
    \  Allo stesso modo del monitoraggio dell'accettazione della notifica da parte\
    \ della Piattaforma sono \n  disponibili le due modalità.\n  \n  #### 4.1 Monitoraggio\
    \ puntuale\n\n  Se la \"richiesta di invio di notifica\" passa le validazioni\
    \ viene trasformata in \"notifica\" e sarà \n  identificata dalla IUN restituito\
    \ dall'operazione \n  [getNotificationRequestStatus](#/SenderReadB2B/retrieveNotificationRequestStatusV21).</br>\
    \ \n  A tal punto si potranno utilizzare l'operazione _GET /delivery/v2.1/notifications/sent/{iun}_\
    \ per \n  ottenere i dettagli della notifica, la _timeline_ che dettaglia il perfezionamento\
    \ della\n  notifica per il mittente e l'avanzamento delle comunicazioni nei confronti\
    \ dei destinatari.\n  \n  #### 4.1 Monitoraggio tramite stream\n\n  Questa modalità\
    \ è consigliata in produzione. Per essere fruita è necessaria una operazione preliminare\n\
    \  tramite la chiamata alla API [createEventStream](#/Streams/createEventStream)\n\
    \  per configurare uno \"stream\" che registri il cambio di stato della notifica\
    \ con il seguente payload di esempio:</br></br>``\n  {\n    \"title\": \"NotificationAccepted\"\
    ,\n    \"eventType\": \"STATUS\"\n  }\n  ``</br></br>che permette di monitorare\
    \ gli eventi di tipo \"STATO\". Successivamente si può ottenere il dettaglio della\
    \ stream appena creata chiamando la \n  API [getEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook.yaml#/Streams/getEventStream),\
    \ mentre si possono ottenere i dati degli eventi richiamando la API [consumeEventStream](https://petstore.swagger.io/?url=https%3A%2F%2Fraw.githubusercontent.com%2Fpagopa%2Fpn-delivery-push%2Fdevelop%2Fdocs%2Fopenapi%2Fapi-external-b2b-webhook.yaml#/Events/consumeEventStream)\n\
    \n\n  ``</br></br>che permette di monitorare gli eventi di tipo \"STATO\". Successivamente\
    \ si può ottenere il dettaglio \n  dello stream appena creato chiamando la API\
    \ [getEventStream](#/Streams/getEventStream)), mentre si possono \n  ottenere\
    \ i dati degli eventi richiamando la API [consumeEventStream](#/Streams/consumeEventStream)\n\
    \n\n  __NOTA__ saranno disponibili i dati di cambiamento di stato occorsi solo\
    \ successivamente alla configurazione\n  dello stream.\n\n  </br>\n\n  ### 5.\
    \ Download dei Legal Facts\n\n  E' possibile scaricare le Attestazioni Opponibili\
    \ a Terzi e gli altri documenti conservati da Piattaforma Notifiche attraverso\
    \ il servizio di [dowload Legal Fact](#/SenderReadB2B/retrieveSentNotificationDocument)\
    \ passando all'interno del path lo <strong>Iun</strong>, il <strong>legalFactType</strong>\
    \ ed il <strong>legalFactId</strong>; si otterrà nella response un link che permette\
    \ di scaricare il documento richiesto.</br> Per ottenere il <strong>legalFactType</strong>\
    \ ed il <strong>legalFactId</strong> bisogna chiamare il servizio di [lettura\
    \ dettaglio notifica](#/SenderReadB2B/retrieveSentNotification) con lo <code>{Iun}</code>\
    \ della notifica di interesse: all'interno del campo <i>timeline</i> della response\
    \ è possibile trovare l'elenco degli eventi di quella notifica ed i <strong>legalFactType</strong>\
    \ e <strong>legalFactId</strong> in corrispondenza degli eventi che generano documenti.\n\
    \  \n</br>\n<details>\n  <summary><strong><big><big><big><big>AMBIENTI</big></big></big></big></strong></summary>\n\
    <ul>   <li><strong>https://api.notifichedigitali.it:</strong></br>Ambiente di\
    \ produzione</li> <li><strong>https://api.uat.notifichedigitali.it:</strong></br>Ambiente\
    \ di collaudo. Potrebbe subire modifiche/integrazioni in futuro, rimanendo comunque\
    \ non-bloccante e rispettando il principio di retrocompatibilità</li> </ul>  \
    \ </details></br><br/>\n\n\n# Piattaforma Notifiche: API B2B avanzamento notifiche\n\
    \nI mittenti di notifica possono seguire il flusso di avanzamento delle notifiche\
    \ in modo  automatico. E' possibile definire fino ad un <font color=\"red\"><strong>massimo\
    \ di <span id=\"webhookMaxStreams\">5</span> configurazioni di flussi per singola\
    \ PA</strong></font> su  informazioni relative a: <br/>\n  - cambiamento di stato\
    \ della notifica;  <br/>\n  - inserimento di elementi nella timeline. <br/>\n\n\
    Per ognuno di questi elementi è possibile definire un filtro per ricevere solo\
    \ alcuni  cambiamenti di stato o determinati eventi di timeline di maggiore interesse.</br><strong>In\
    \ assenza del filtro verranno restituiti tutti gli elementi relativi alla v1.</strong>\
    \ </br>Si consiglia di creare gli stream prima dell'invio delle notifiche perché\
    \ gli stati o gli eventi di  timeline vengono registrati solo successivamente\
    \ alla creazione dello stream.</br> </br> __Esempio:__ - Stream contenente tutte\
    \ le notifiche in stato Cancellato: </br></br> `` {\n  \"title\": \"NotificationCancelled\"\
    ,\n  \"eventType\": \"STATUS\",\n  \"filterValues\": [\n    \"CANCELLED\"\n  ]\n\
    } `` </br></br> __Esempio:__ - Stream contenente tutte le notifiche in stato Accettato\
    \ o Consegnato: </br></br> `` {\n  \"title\": \"NotificationAcceptedOrDelivered\"\
    ,\n  \"eventType\": \"STATUS\",\n  \"filterValues\": [\n    \"ACCEPTED\",\"DELIVERED\"\
    \n  ]\n} `` </br></br> __Esempio:__ - Stream contenente tutti gli eventi di timeline\
    \ NOTIFICATION_VIEWED: </br></br> `` {\n  \"title\": \"TimelineNotificationViewed\"\
    ,\n  \"eventType\": \"TIMELINE\",\n  \"filterValues\": [\n    \"NOTIFICATION_VIEWED\"\
    \n  ]\n} `` </br></br>\nGli stati della notifica che possono essere inseriti come\
    \ __filterValues__ sono i seguenti: \n  <details>\n    <summary>Stati - v1</summary>\n\
    \    <ul>\n      <li><strong>ACCEPTED </strong><em>L'ente ha depositato la notifica\
    \ con successo.</em></li>\n      <li><strong>REFUSED </strong><em>Notifica rifiutata\
    \ a seguito della validazione.</em></li>\n      <li><strong>DELIVERING </strong><em>L'invio\
    \ della notifica è in corso.</em></li>\n      <li><strong>DELIVERED </strong><em>La\
    \ notifica è stata consegnata a tutti i destinatari.</em></li>\n      <li><strong>VIEWED\
    \ </strong><em>Il destinatario ha letto la notifica entro il termine stabilito.</em></li>\n\
    \      <li><strong>EFFECTIVE_DATE </strong><em>Il destinatario non ha letto la\
    \ notifica entro il termine stabilito.</em></li>\n      <li><strong>UNREACHABLE\
    \ </strong><em>Il destinatario non è reperibile.</em></li>\n      <li><strong>CANCELLED\
    \ </strong><em>L'ente ha annullato l'invio della notifica.</em></li>\n    </ul>\n\
    \  </details>\n</br>\nLe categorie degli eventi di timeline che possono essere\
    \ inseriti come __filterValues__ sono i seguenti: \n\n  <details>\n    <summary>Eventi\
    \ di timeline - v1</summary>\n    <ul>\n      <li><strong>SENDER_ACK_CREATION_REQUEST\
    \ </strong><em>Invio della richiesta di creazione dell'atto opponibile a terzi\
    \ di presa in carico per il mittente a safe storage</em></li>\n      <li><strong>VALIDATE_NORMALIZE_ADDRESSES_REQUEST\
    \ </strong><em>Invio della richiesta di validazione e normalizzazione indirizzi\
    \ fisici presenti nella richiesta di notifica</em></li>\n      <li><strong>NORMALIZED_ADDRESS\
    \ </strong><em>Ricezione esito normalizzazione indirizzo</em></li>\n      <li><strong>REQUEST_ACCEPTED\
    \ </strong><em>Richiesta di notifica accettata a seguito dei controlli di validazione.</em></li>\n\
    \      <li><strong>AAR_CREATION_REQUEST </strong><em>Invio della richiesta di\
    \ creazione dell'AAR (Avviso di Avvenuta Ricezione) a safe storage</em></li>\n\
    \      <li><strong>SEND_COURTESY_MESSAGE </strong><em>Invio di un messaggio di\
    \ cortesia.</em></li>\n      <li><strong>GET_ADDRESS </strong><em>Disponibilità\
    \ dell’indirizzo specifico (domicilio digitale di piattaforma, domicilio digitale\
    \ speciale, domicilio digitale generale, indirizzo fisico sulla notifica o sui\
    \ registri nazionali).</em></li>\n      <li><strong>PUBLIC_REGISTRY_CALL </strong><em>Richiesta\
    \ ai registri pubblici per ottenere domicilio digitale generale o per ottenere\
    \ indirizzo fisico da ANPR, da registro della imprese, da anagrafe tributaria.</em></li>\n\
    \      <li><strong>PUBLIC_REGISTRY_RESPONSE </strong><em>Ricevuta la risposta\
    \ dei registri pubblici.</em></li>\n      <li><strong>SCHEDULE_ANALOG_WORKFLOW\
    \ </strong><em>Pianificazione del workflow per invio cartaceo</em></li>\n    \
    \  <li><strong>SCHEDULE_DIGITAL_WORKFLOW </strong><em>Pianificazione del workflow\
    \ per invio digitale (PEC) del secondo tentativo in caso di fallimento del primo.</em></li>\n\
    \      <li><strong>PREPARE_DIGITAL_DOMICILE </strong><em>Preparazione per l’invio\
    \ dell’avviso digitale.Va a valutare la timeline per capire quale sarà il prossimo\
    \ indirizzo da usare.</em></li>\n      <li><strong>SEND_DIGITAL_PROGRESS </strong><em>Tentativo\
    \ di Invio PEC ad un determinato indirizzo.</em></li>\n      <li><strong>SEND_DIGITAL_DOMICILE\
    \ </strong><em>Invio digitale dell’avviso di notifica</em></li>\n      <li><strong>SEND_DIGITAL_FEEDBACK\
    \ </strong><em>Ottenuto esito ad un invio digitale</em></li>\n      <li><strong>REFINEMENT\
    \ </strong><em>Perfezionamento per decorrenza termini</em></li>\n      <li><strong>SCHEDULE_REFINEMENT\
    \ </strong><em>Pianificato il perfezionamento per decorrenza termini</em></li>\n\
    \      <li><strong>DIGITAL_SUCCESS_WORKFLOW </strong><em>Completato con successo\
    \ il workflow di invio digitale.</em></li>\n      <li><strong>DIGITAL_FAILURE_WORKFLOW\
    \ </strong><em>Completato con fallimento il workflow di invio digitale: <strong>tutti\
    \ i tentativi di invio ai domicili digitali sono falliti.</strong></em></li>\n\
    \      <li><strong>ANALOG_SUCCESS_WORKFLOW </strong><em>Completato con successo\
    \ il workflow di invio cartaceo.</em></li>\n      <li><strong>ANALOG_FAILURE_WORKFLOW\
    \ </strong><em>Completato con fallimento il workflow di invio cartaceo. NOTA:\
    \ se per tutti i destinatari si conclude il workflow con fallimento verrà scatenato\
    \ l’evento COMPLETELY_UNREACHABLE</em></li>\n      <li><strong>PREPARE_SIMPLE_REGISTERED_LETTER\
    \ </strong><em>Invio richiesta di prepare (preparazione ad invio) raccomandata\
    \ semplice a paperChannel</em></li>\n      <li><strong>SEND_SIMPLE_REGISTERED_LETTER\
    \ </strong><em>Invio di raccomandata semplice</em></li>\n      <li><strong>SIMPLE_REGISTERED_LETTER_PROGRESS\
    \ </strong><em>Ricezione informazioni intermedia relative ad una notificazione\
    \ cartacea semplice</em></li>\n      <li><strong>NOTIFICATION_VIEWED_CREATION_REQUEST\
    \ </strong><em>Invio della richiesta di creazione dell'atto opponibile a terzi\
    \ di presa visione a safe storage</em></li>\n      <li><strong>NOTIFICATION_VIEWED\
    \ </strong><em>Visualizzazione della notifica (perfeziona la notifica se non già\
    \ perfezionata per decorrenza termini o da altro destinatario)</em></li>\n   \
    \   <li><strong>PREPARE_ANALOG_DOMICILE </strong><em>Invio richiesta di prepare\
    \ (preparazione ad invio) cartaceo a paperChannel</em></li>\n      <li><strong>SEND_ANALOG_PROGRESS\
    \ </strong><em>Ricezione informazioni intermedia relative ad una notificazione\
    \ cartacea</em></li>\n      <li><strong>SEND_ANALOG_FEEDBACK </strong><em>Ricezione\
    \ esito dell'invio cartaceo.\n        </br>Il valore del campo details.responseStatus\
    \ contiene l’esito della notifica digitale.Può assumere i valori di OK o KO .</em></li>\n\
    \      <li><strong>SEND_ANALOG_DOMICILE </strong><em>Invio cartaceo dell’avviso\
    \ di notifica</em></li>\n      <li><strong>COMPLETELY_UNREACHABLE_CREATION_REQUEST\
    \ </strong><em>Invio della richiesta di creazione dell'atto (simile a opponibile\
    \ a terzi) di completamento con fallimento del workflow di invio cartaceo</em></li>\n\
    \      <li><strong>COMPLETELY_UNREACHABLE </strong><em>Tutti i destinatari risultano\
    \ irraggiungibili</em></li>\n      <li><strong>REQUEST_REFUSED </strong><em>Richiesta\
    \ di notifica rifiutata per fallimento di validazione.</em></li>\n      <li><strong>AAR_GENERATION\
    \ </strong><em>Generazione dell’AAR (Avviso di Avvenuta Ricezione)</em></li>\n\
    \      <li><strong>PROBABLE_SCHEDULING_ANALOG_DATE</strong><em>Data probabile\
    \ di inizio del flusso analogico</em></li>\n      <li><strong>PREPARE_ANALOG_DOMICILE_FAILURE</strong><em>Fallimento\
    \ della richiesta di prepare (preparazione ad invio) cartaceo a paperChannel</em></li>\n\
    \    </ul>\n  </details>\n  <details>\n    <summary>Eventi di timeline - v2 (tutti\
    \ gli elementi v1 + gli elementi seguenti)</summary>\n    <ul>\n      <li><strong>NOTIFICATION_CANCELLATION_REQUEST</strong><em>Richiesta\
    \ di annullamento di una notifica</em></li>\n      <li><strong>NOTIFICATION_CANCELLED</strong><em>Notifica\
    \ annullata: completamento della richiesta di annullamento di una notifica</em></li>\n\
    \      <li><strong>PREPARE_ANALOG_DOMICILE_FAILURE</strong><em>Fallimento della\
    \ richiesta di prepare (preparazione ad invio) cartaceo a paperChannel</em></li>\n\
    \    </ul>\n  </details>\n</br> Di seguito un esempio di creazione e successiva\
    \ interrogazione dello stream: \n\n  <details>\n    <summary>Esempio dello stream</summary>\n\
    \  \n  <table>\n  \n  <tr>\n  \n  <td>\n  \n  </br>\n  \n  ### 1) Creazione dello\
    \ stream ed inserimento notifica\n  In questo esempio creo 2 stream con il servizio\
    \ di [creazione stream](#/Streams/createEventStream): uno per gli status</br>\
    \ e l'altro per gli eventi di timeline.</br> Vedesi le request <big><strong>a)</strong></big>\
    \ di esempio con le relative response <big><strong>b)</strong></big>, Da notare\
    \ che sono presenti</br> dei filtri per ottenere solo specifici status o eventi;\
    \ se si vogliono ottenere tutte </br>le variazioni limitatamente agli eventi della\
    \ v1, non bisogna inserire alcun filtro: \n  <code>\"filterValues\": []</code></br>\
    \      \n  Una volta creati gli stream, bisogna utilizzare il servizio di [inserimento\
    \ nuova notifica](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/pagopa/pn-delivery/develop/docs/openapi/api-external-b2b-pa-v1.yaml#/NewNotification/sendNewNotification)</br>\
    \ sulla Piattaforma. A questo punto bisognerà attendere che vengano completati\
    \ i controlli</br> di validazione e se questi avranno esito positivo e la notifica\
    \ verrà accettata, comincerà</br> il workflow di consegna della stessa. Con l'avanzare\
    \ del tempo verranno generati degli</br> eventi e dei cambiamenti di stato che\
    \ verranno puntualmente registrati negli stream</br> configurati precedentemente\
    \ a partire già dal primo evento che certifica l'accettazione</br> o il rifiuto\
    \ della notifica appena inserita con il relativo passaggio allo stato ACCEPTED.\n\
    \  \n  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n\
    \  \n  ### 2) Prima interrogazione degli stream appena creati\n  \n  Col passare\
    \ del tempo, potremo interrogare gli stream appena creati per leggere</br> gli\
    \ eventi registrati, a partire già dall'evento di accettazione della notifica.</br>\
    \ Si possono interrogare gli eventi registrati all'interno di uno stream con il\
    \ servizio</br> di [lettura degli eventi](#/Events/consumeEventStream) passando\
    \ il valore desiderato nello <code>{streamId}</code> ed otterremo</br> la response\
    \ <big><strong>c)</strong></big> che contiene un array con un numero massimo di\
    \ <span id=\"webhookMaxLength\">50</span> eventi corrispondenti</br> a quelli\
    \ che impattano tutte le notifiche inserite dalla creazione dello stream in poi</br>\
    \ e che potranno essere salvati sul database del client chiamante.</br> Da notare\
    \ che ogni evento contiene l'<code>eventId</code> ad esso associato.</br>\n  \n\
    \  A questo punto bisogna controllare il parametro <code>retry-after</code> contenuto\
    \ nell'header</br> della response per capire quanto tempo attendere prima di richiamare\
    \ lo stream</br> ed ottenere nuovi risultati: \n  <ul>\n  <li>Se <code>retry-after\
    \ = 0</code> significa che lo stream contiene ulteriori eventi rispetto</br> a\
    \ quelli che ho appena ottenuto nella response e quindi posso richiamare subito</br>\
    \ il servizio e consumare gli eventi successivi</li></br>\n  <li>se <code>retry-after\
    \ ≠ 0</code> significa che lo stream NON contiene altri eventi rispetto</br> a\
    \ quelli che ottenuti in questa chiamata e quindi dovrò attendere la quantità\
    </br> di tempo indicata nel <code>retry-after</code> prima di effettuare un'altra\
    \ chiamata</br> per consumare ulteriori eventi</li>\n  </ul>\n  \n  <font color=\"\
    red\"><strong>NOTA:</strong> \n  è importante consumare <strong>SEMPRE</strong>\
    \ gli eventi che vengono restituiti dallo stream, anche se il <code>retry-after\
    \ ≠ 0</code>; infatti tale parametro regola la cadenza di chiamata al servizio,\
    \ mentre il consumo degli eventi deve avvenire in ogni chiamata nella quale si\
    \ ottengono eventi in risposta.</font>\n  \n  </br>\n  </br>\n  </br>\n\n  ###\
    \ 3) Successive interrogazioni degli stream appena creati\n\n  Se la response\
    \ della prima interrogazione degli stream restituisce nell'header: <code>retry-after\
    \ = 0</code></br> significa che lo stream contiene altri eventi che possono essere\
    \ consumati subito con</br> un'ulteriore chiamata al servizio di [lettura degli\
    \ eventi](#/Events/consumeEventStream), ma questa volta per consumare</br> gli\
    \ eventi successivi, bisogna valorizzare nei query params della request</br> il\
    \ parametro <code>lastEventId</code> con l'eventId ottenuto nella precedente chiamata.</br>\
    \ Così facendo il servizio eliminerà dallo stream tutti gli eventi precedenti\
    \ a quello inserito</br> nel <code>lastEventId</code> e restituirà nella response\
    \ <big><strong>d)</big></strong> solamente quelli successivi.</br>\n\n  A questo\
    \ punto si potrà capire, sempre dal valore del <code>retry-after</code> contenuto\
    \ nell'header</br> se chiamare subito il servizio ed inserire il <code>lastEventId</code>\
    \ di questa ulteriore chiamata</br> o attendere il tempo indicato nell'header</br>\n\
    \n  <strong>NOTA:</strong> gli eventi eliminati dallo stream in seguito alla chiamata\
    \ del servizio di [lettura degli eventi](#/Events/consumeEventStream)</br> con\
    \ il query param <code>lastEventId</code> valorizzato, <strong><font color=\"\
    red\">non potranno più essere recuperati dallo stream</font></strong></br> in\
    \ nessun modo. E' quindi fondamentale salvare di volta in volta gli eventi che\
    \ si ottengono</br> all'interno database del chiamante, rispettando la logica\
    \ del producer/consumer di eventi</br> proposta dagli stream.</br> In caso di\
    \ eliminazione degli eventi avvenuta per errore, sarà possibile come ultima istanza</br>\
    \ chiamare il servizio di [lettura dettaglio notifica](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/pagopa/pn-delivery/develop/docs/openapi/api-external-b2b-pa-v1.yaml#/SenderReadB2B/retrieveSentNotification)\
    \ che però esporrà tutti gli eventi di timeline e lo stato</br> attuale della\
    \ singola notifica ed è quindi meno performante delle stream.\n\n  </td>\n  <td>\n\
    \  \n  #### a) Request di POST /delivery-progresses/streams\n  \n    {       \
    \                                    {\n      \"title\": \"stream-status-prova\"\
    ,             \"title\": \"stream-timeline-prova\",\n      \"eventType\": \"STATUS\"\
    ,                      \"eventType\": \"TIMELINE\",\n      \"filterValues\": [\
    \                           \"filterValues\": [\n          \"ACCEPTED\"      \
    \                            \"REQUEST_ACCEPTED\"\n      ]                   \
    \                        ]\n    }                                           }\n\
    \    \n  #### b) Response di POST /delivery-progresses/streams\n    \n    {  \
    \                                         {\n        \"title\": \"stream-status-prova\"\
    ,           \"title\": \"stream-timeline-prova\",\n        \"eventType\": \"STATUS\"\
    ,                    \"eventType\": \"TIMELINE\",\n        \"filterValues\": [\
    \                         \"filterValues\": [\n            \"ACCEPTED\"      \
    \                          \"REQUEST_ACCEPTED\"\n        ],                  \
    \                      ],\n        \"streamId\":                             \
    \  \"streamId\": \n        \"4e6d5e59-85fc-4ef7-bad8\",                \"6d87ree59-31ff-2rr7-lok1\"\
    ,\n        \"activationDate\":                         \"activationDate\": \n\
    \        \"2022-12-12T14:52:23.362454Z\"             \"2022-12-12T14:53:23.362454Z\"\
    \n    }                                           }  \n  \n  </br>\n  </br>\n\n\
    \  #### c) Response di GET /delivery-progresses/streams/<code>{streamId}</code>/events\n\
    \  \n    Headers: { \"retry-after\": \"60000\" }\n\n    [\n        {\n       \
    \     \"eventId\": \"0000000000000000000001\",\n            \"timestamp\": \"\
    2022-12-06T08:14:26.140041Z\",\n            \"notificationRequestId\": \"QUJDRC1BQkNELUFCQ0QtMjAyMjEyLVYtMQ==\"\
    ,\n            \"iun\": \"ABCD-ABCD-ABCD-202212-V-1\",\n            \"newStatus\"\
    : \"ACCEPTED\",\n            \"timelineEventCategory\": \"REQUEST_ACCEPTED\",\n\
    \            \"recipientIndex\": \"0\",\n            \"analogCost\": \"0\",\n\
    \            \"channel\": \"PEC\",\n            \"legalfactIds\": [\n        \
    \      \"PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9Q\",\n              \"PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9E\"\
    \n            ]\n        }, \n        ... // altri eventi nell'array\n    ]\n\n\
    \  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n  </br>\n\n  #### d) Response\
    \ di GET /delivery-progresses/streams/<code>{streamId}</code>/events</br> chiamato\
    \ valorizzando nei query params il parametro <code>lastEventId</code> con l'eventId</br>\
    \ dell'ultimo evento nella precedente chiamata.</br>\n  \n    Headers: { \"retry-after\"\
    : \"60000\" }\n\n    [\n        {\n            \"eventId\": \"0000000000000000000011\"\
    ,\n            \"timestamp\": \"2022-12-07T10:13:22.158041Z\",\n            \"\
    notificationRequestId\": \"QUJDRC1BQkNELUFCQ0QtMjAyMjEyLVYtMQ==\",\n         \
    \   \"iun\": \"ABCD-ABCD-ABCD-202212-V-1\",\n            \"newStatus\": \"DELIVERED\"\
    ,\n            \"timelineEventCategory\": \"DIGITAL_SUCCESS_WORKFLOW\",\n    \
    \        \"recipientIndex\": \"0\",\n            \"analogCost\": \"0\",\n    \
    \        \"channel\": \"PEC\",\n            \"legalfactIds\": [\n            \
    \  \"PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9Q\",\n              \"PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9E\"\
    \n            ]\n        }, \n        ... // altri eventi nell'array\n    ]\n\
    \  \n  </td>\n  \n  </tr>\n  \n  </table>\n\n  </br>\n  </br>\n  \n  </details>\
    \  \n\nLe operazioni con il tag __Streams__ gestiscono la configurazione: <br/>\n\
    \  - [Creazione](#/Streams/createEventStream) <br/>\n  - [Elencare la lista degli\
    \ stream creati](#/Streams/listEventStreams) <br/>\n  - [Leggere i metadati dello\
    \ stream](#/Streams/getEventStream) <br/>\n  - [Modifica](#/Streams/updateEventStream)\
    \ <br/>\n  - [Cancellazione](#/Streams/deleteEventStream) <br/>\n\nLe operazioni\
    \ con il tag __Events__ sono quelle utilizzate per la [lettura degli eventi](#/Events/consumeEventStream)\
    \  filtrati in base alla configurazione impostata negli streams.\nLa api restituisce\
    \ un massimo di <span id=\"webhookMaxLength\">50</span> elementi. Se <u>esistono</u>\
    \ ulteriori eventi nello stream, allora la response del servizio  restituice l'elemento\
    \ `retryAfter = 0`; ed è quindi possibile richiamare immediatamente il servizio\
    \ per ottenere gli eventi successivi, utilizzando  il parametro _lastEventId_\
    \ valorizzato con l'ultimo _eventId_ della richiesta precedente. Si evidenzia\
    \ che ogni nuova chiamata al servizio con _lastEventId_ implica la cancellazione\
    \ degli eventi precedenti. Tuttavia, in fase di implementazione del client che\
    \ consumerà i servizi, bisogna considerare il fattore della __non univocità degli\
    \ eventi__: è possibile che se in un dato secondo avvengano più eventi contemporaneamente,\
    \ nella chiamata successiva allo stream dove si inserisce l'_eventId_, non vengano\
    \ cancellati gli altri eventi contemporanei avvenuti nello stesso secondo dell'_eventId_\
    \ indicato; ottenendo quindi una riproposizione di eventi già ottenuti dalla chiamata\
    \ precedente.</br> Se <u>non esistono</u> ulteriori eventi nello stream, allora\
    \ la response del servizio restituisce il valore di `retryAfter ≠ 0` ed è quindi\
    \ necessario attendere il tempo indicato dalla retryAfter per consumare eventualmente\
    \ nuovi eventi nello stream.</br> <font color=\"red\"><strong>Nella prima versione\
    \ di Piattaforma Notifiche non verrà implementata la segregazione dei gruppi e\
    \ pertanto le informazioni presenti all'interno di uno stream saranno accessibili\
    \ a tutte le apiKey della stessa PA; Si evidenzia comunque che gli eventi esposti\
    \ dalle stream sono anonimizzati e non contengono informazioni personali o sensibili\
    \ dei soggetti impattati dagli eventi.</font></strong></br> <font color=\"red\"\
    >__Gli eventi sono mantenuti per un massimo di <span id=\"webhookTtl\">7</span>\
    \ giorni dopo i quali sono automaticamente cancellati anche se non sono stati\
    \ prelevati dallo stream, e sarà possibile ottenere lo stato della notifica solo\
    \ attraverso il servizio [getNotificationRequestStatus](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/pagopa/pn-delivery/develop/docs/openapi/api-external-b2b-pa-v1.yaml#/SenderReadB2B/retrieveNotificationRequestStatus)__\
    \ </font> \n</br> </br>\n<h3>Le <strong>FAQ</strong> possono essere consultate\
    \ al seguente link: <a href=\"https://docs.pagopa.it/v1.0-1/\">https://docs.pagopa.it/v1.0-1/</a></h3>"
  termsOfService: https://notifichedigitali.pagopa.it/pubbliche-amministrazioni/index.html
  contact:
    email: pn-supporto-enti@pagopa.it
  license:
    name: Licenza di PN
    url: https://notifichedigitali.pagopa.it/pubbliche-amministrazioni/index.html
  version: 1.0.0
  x-api-id: api-external-b2b-pa
  x-summary: "Piattaforma Notifiche: API B2B per le Pubbliche Amministrazioni"
servers:
- url: https://api.notifichedigitali.it
  description: Ambiente di produzione
- url: https://api.uat.notifichedigitali.it
  description: Ambiente di collaudo
security:
- ApiKeyAuth: []
tags:
- name: HealthCheck
  description: "Invocazioni per sapere lo stato di Piattaforma Notifiche # il servizio\
    \ è ancora in fase di sviluppo"
- name: NewNotification
  description: Invocazioni per effettuare il pre-caricamento dei documenti della notifica
    e inviare notifiche
- name: SenderReadB2B
  description: Invocazioni utilizzabili dai mittenti per verificare lo stato delle
    richieste  di notifica inviate e delle notifiche accettate.
- name: NotificationPrice
  description: Invocazioni per determinare il costo della notifica per il destinatario.
- name: LegalFacts
  description: Invocazioni per effettuare il download degli atti opponibili a terzi
- name: PaymentEvents
  description: Invocazioni per comunicare eventi di pagamento dalla PA
- name: NotificationCancellation
  description: Annullamento di una notifica
- name: Streams
  description: Gestione degli stream di eventi che PN mette a disposizione
- name: Events
  description: Metodi per la lettura degli eventi dagli stream
paths:
  /status:
    get:
      tags:
      - HealthCheck
      summary: status path
      description: status path per verificare lo stato di Piattaforma Notifiche
      operationId: status
      responses:
        "200":
          description: Ok
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PnStatusResponse'
              example:
                functionalities:
                - NOTIFICATION_CREATE
                - NOTIFICATION_VISUALIZATION
                - NOTIFICATION_WORKFLOW
                openIncidents: []
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PnStatusResponse'
              example:
                functionalities:
                - NOTIFICATION_CREATE
                - NOTIFICATION_VISUALIZATION
                - NOTIFICATION_WORKFLOW
                openIncidents:
                - functionality: NOTIFICATION_CREATE
                  status: KO
                  startDate: 2019-08-24T14:15:22Z
  /delivery/attachments/preload:
    post:
      tags:
      - NewNotification
      summary: Richiesta di pre-caricamento dei documenti della notifica
      description: Operazione che richiede a Piattaforma Notifica le informazioni
        e le autorizzazioni necessarie  a precaricare uno o più file da allegare a
        una notifica. <br/>
      operationId: presignedUploadRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreLoadBulkRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PreLoadResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/v2.1/requests:
    get:
      tags:
      - SenderReadB2B
      summary: Verifica accettazione richiesta notifica
      description: Questa operazione serve per verificare se la richiesta di notifica
        è stata accettata e ottenere lo IUN associato a tale richiesta. <br/> Bisogna
        specificare il parametro _requestId_ oppure la coppia costituita dai parametri  _paProtocolNumber_
        e _idempotenceToken_. <br/>
      operationId: retrieveNotificationRequestStatusV21
      parameters:
      - name: notificationRequestId
        in: query
        description: identificativo della richiesta di notifica
        required: false
        style: form
        explode: true
        schema:
          maxLength: 36
          pattern: "^[A-Za-z0-9+/=]{36}$"
          type: string
      - name: paProtocolNumber
        in: query
        description: "Numero di protocollo associato alla notifica, può essere riutilizzato\
          \ per rettifiche."
        required: false
        style: form
        explode: true
        schema:
          maxLength: 256
          pattern: ^.*$
          type: string
      - name: idempotenceToken
        in: query
        description: token usato per disambiguare "richieste di notificazione" effettuate
          con lo stesso  numero di protocollo.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 256
          pattern: "^[ -~]*$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewNotificationRequestStatusResponseV21'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
      - NewNotification
      summary: Richiesta invio notifica
      description: |-
        Operazione utilizzata dalla Pubblica Amministrazione per richiedere l'invio di una notifica.

        La restituzione di uno stato HTTP 202 significa solo che la richiesta è sintatticamente
        valida, non che la richiesta sia stata validata ed accettata. <br/>
        Per conoscere lo stato di accettazione della richiesta di notifica bisogna utilizzare l'operazione
        _getNotificationRequestStatus_ oppure utilizzare la modalità push prevista dai webhook. <br/>
      operationId: sendNewNotificationV21
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNotificationRequestV21'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewNotificationResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/v2.1/notifications/sent/{iun}:
    get:
      tags:
      - SenderReadB2B
      summary: "Mittente: lettura dettagli notifica versione 2"
      description: Questa operazione permette di leggere tutti i dettagli di una notifica
        accettata. <br/>
      operationId: retrieveSentNotificationV21
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSentNotificationV21'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/notifications/sent/{iun}/attachments/documents/{docIdx}:
    get:
      tags:
      - SenderReadB2B
      summary: Download documento notificato
      description: Download documento notificato
      operationId: retrieveSentNotificationDocument
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      - name: docIdx
        in: path
        description: indice del documento nella lista partendo da 0.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAttachmentDownloadMetadataResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/notifications/sent/{iun}/attachments/payment/{recipientIdx}/{attachmentName}:
    get:
      tags:
      - SenderReadB2B
      summary: Download allegato per pagamento
      description: Download allegato per pagamento
      operationId: retrieveSentNotificationAttachment
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      - name: recipientIdx
        in: path
        description: indice del destinatario nella lista partendo da 0.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: attachmentName
        in: path
        description: Tipologia del pagamento allegato alla notifica. Valori possibili
          PAGOPA|F24
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 6
          minLength: 3
          pattern: PAGOPA|F24
          type: string
      - name: attachmentIdx
        in: query
        description: indice del documento di pagamento partendo da 0
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationAttachmentDownloadMetadataResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/price/{paTaxId}/{noticeCode}:
    get:
      tags:
      - NotificationPrice
      summary: Retrieve notification price and effective date
      description: |-
        Usata dalla PA per recuperare il costo di notificazione tramite
         l'identificativo della posizione debitoria paTaxId e noticeCode.
      operationId: retrieveNotificationPrice
      parameters:
      - name: paTaxId
        in: path
        description: Payment PA fiscal code
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/paTaxId'
        example: "77777777777"
      - name: noticeCode
        in: path
        description: Payment notice number  numero avviso
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/noticeCode'
        example: "302000100000019421"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPriceResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/events/payment/pagopa:
    post:
      tags:
      - PaymentEvents
      description: Questa API è a disposizione della Pubblica Amministrazione per
        inviare eventi di chiusura di una o più posizioni debitorie di tipo PagoPA.
        <br/>
      operationId: paymentEventsRequestPagoPa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentEventsRequestPagoPa'
        required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery/events/payment/f24:
    post:
      tags:
      - PaymentEvents
      description: Questa API è a disposizione della Pubblica Amministrazione per
        inviare eventi di chiusura di una o più posizioni debitorie di tipo F24. <br/>
      operationId: paymentEventsRequestF24
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentEventsRequestF24'
        required: true
      responses:
        "204":
          description: OK
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      deprecated: true
  /delivery/requests:
    get:
      tags:
      - SenderReadB2B
      summary: Verifica accettazione richiesta notifica
      description: Questa operazione serve per verificare se la richiesta di notifica
        è stata accettata e ottenere lo IUN associato a tale richiesta. <br/> Bisogna
        specificare il parametro _requestId_ oppure la coppia costituita dai parametri  _paProtocolNumber_
        e _idempotenceToken_. <br/>
      operationId: retrieveNotificationRequestStatus
      parameters:
      - name: notificationRequestId
        in: query
        description: identificativo della richiesta di notifica
        required: false
        style: form
        explode: true
        schema:
          maxLength: 36
          pattern: "^[A-Za-z0-9+/=]{36}$"
          type: string
      - name: paProtocolNumber
        in: query
        description: "Numero di protocollo associato alla notifica, può essere riutilizzato\
          \ per rettifiche."
        required: false
        style: form
        explode: true
        schema:
          maxLength: 256
          pattern: ^.*$
          type: string
      - name: idempotenceToken
        in: query
        description: token usato per disambiguare "richieste di notificazione" effettuate
          con lo stesso  numero di protocollo.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 256
          pattern: "^[ -~]*$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewNotificationRequestStatusResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      deprecated: true
      x-pagopa-lambda-name: pn-delivery-versioning-v1v21-getnotificationrequeststatus-lambda:live
      x-pagopa-lambda-account: core
    post:
      tags:
      - NewNotification
      summary: Richiesta invio notifica
      description: |-
        Operazione utilizzata dalla Pubblica Amministrazione per richiedere l'invio di una notifica.

        La restituzione di uno stato HTTP 202 significa solo che la richiesta è sintatticamente
        valida, non che la richiesta sia stata validata ed accettata. <br/>
        Per conoscere lo stato di accettazione della richiesta di notifica bisogna utilizzare l'operazione
        _getNotificationRequestStatus_ oppure utilizzare la modalità push prevista dai webhook. <br/>
      operationId: sendNewNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNotificationRequest'
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewNotificationResponse'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      deprecated: true
      x-pagopa-lambda-name: pn-delivery-versioning-v1v21-sendnewnotification-lambda:live
      x-pagopa-lambda-account: core
  /delivery/notifications/sent/{iun}:
    get:
      tags:
      - SenderReadB2B
      summary: "Mittente: lettura dettagli notifica"
      description: Questa operazione permette di leggere tutti i dettagli di una notifica
        accettata. <br/>
      operationId: retrieveSentNotification
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSentNotification'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      deprecated: true
      x-pagopa-lambda-name: pn-delivery-versioning-v1v2-getnotification-lambda:live
      x-pagopa-lambda-account: core
  /delivery/v2.0/notifications/sent/{iun}:
    get:
      tags:
      - SenderReadB2B
      summary: "Mittente: lettura dettagli notifica versione 2"
      description: Questa operazione permette di leggere tutti i dettagli di una notifica
        accettata. <br/>
      operationId: retrieveSentNotificationV20
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSentNotificationV20'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      deprecated: true
  /delivery-push/v2.0/notifications/cancel/{iun}:
    put:
      tags:
      - NotificationCancellation
      summary: Annullamento notifica
      description: "Permette l'annullamento di una notifica restituendo una presa\
        \ in carico, il processo di annullamento si completa poi in maniera asincrona"
      operationId: notificationCancellation
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      responses:
        "202":
          description: Accepted - Richiesta annullamento presa in carico
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestStatus'
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery-push/{iun}/legal-facts:
    get:
      tags:
      - LegalFacts
      summary: Elenco atti opponibili a terzi
      description: Elenca le informazione di categorizzazione di tutti gli atti opponibili
        a terzi  registrati durante il processo di notifica. <br/> L'unico valore
        ammesso per il parametro _x-pagopa-pn-cx-type_ è `PA`
      operationId: retrieveNotificationLegalFacts
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactList'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery-push/{iun}/legal-facts/{legalFactType}/{legalFactId}:
    get:
      tags:
      - LegalFacts
      summary: Singolo atto opponibile a terzi
      description: Permette di scaricare un atto opponibile a terzi <br/> L'unico
        valore ammesso per il parametro _x-pagopa-pn-cx-type_ è `PA`
      operationId: retrieveLegalFact
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      - name: legalFactType
        in: path
        description: Categoria dell'atto opponibile a terzi
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/LegalFactCategory'
      - name: legalFactId
        in: path
        description: Identificativo dell'atto opponibile a terzi
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 1024
          pattern: "^[ -~]*$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactDownloadMetadataResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery-push/{iun}/download/legal-facts/{legalFactId}:
    get:
      tags:
      - LegalFacts
      summary: Singolo atto opponibile a terzi
      description: Permette di scaricare un atto opponibile a terzi <br/> L'unico
        valore ammesso per il parametro _x-pagopa-pn-cx-type_ è `PA`
      operationId: downloadLegalFactById
      parameters:
      - name: iun
        in: path
        description: Identificativo Univoco Notifica
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
      - name: legalFactId
        in: path
        description: Identificativo dell'atto opponibile a terzi
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 1024
          pattern: "^[ -~]*$"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalFactDownloadMetadataResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery-progresses/streams:
    get:
      tags:
      - Streams
      summary: Elenca stream di eventi
      description: Elenca gli stream di eventi
      operationId: listEventStreams
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamListResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
      - Streams
      summary: Crea nuovo stream di eventi
      description: "Viene richiesta la creazione di un flusso di eventi specificando\
        \ se gli eventi saranno  relativi ai cambi di stato o agli eventi di timeline.\
        \ <br/> In risposta, Piattaforma Notifiche, comunicherà un identificativo\
        \ dello stream e il  timestamp di effettiva attivazione del flusso, tipicamente\
        \ pochi secondi dopo che è stata  invocata l'operazione."
      operationId: createEventStream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamCreationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamMetadataResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery-progresses/streams/{streamId}:
    get:
      tags:
      - Streams
      summary: Leggi metadati dello stream
      description: Permette di leggere le configurazioni di uno stream di eventi.
      operationId: retrieveEventStream
      parameters:
      - name: streamId
        in: path
        description: Identificativo dello stream di eventi
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamMetadataResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
      - Streams
      summary: Update Stream metadata
      description: Permette di cambiare le configurazioni dei filtri associati a uno
        stream di eventi
      operationId: updateEventStream
      parameters:
      - name: streamId
        in: path
        description: Identificativo dello stream di eventi
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamCreationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamMetadataResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      tags:
      - Streams
      summary: Remove Event Stream
      description: "Elimina uno steam di eventi: elimina sia le configurazioni sia\
        \ tutti gli eventi  associati allo stream e non ancora consumati."
      operationId: removeEventStream
      parameters:
      - name: streamId
        in: path
        description: Identificativo dello stream di eventi
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: OK
        "400":
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /delivery-progresses/streams/{streamId}/events:
    get:
      tags:
      - Events
      summary: Leggi progressi notifiche
      description: Permette di leggere gli eventi presenti nello stream di aggiornamenti
        e indica che  la P.A. ha ricevuto e memorizzato l'evento identificato dal
        parametro _lastEventId_ e tutti gli eventi precedenti. Tali eventi potranno
        essere cancellati dallo stream.
      operationId: consumeEventStream
      parameters:
      - name: streamId
        in: path
        description: Identificativo dello stream di eventi
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: lastEventId
        in: query
        description: "Identificativo dell'ultimo evento memorizzato dal chiamante,\
          \ se non passato si intende dal primo evento presente nello stream. Numero\
          \ in una stringa di 38 caratteri con padding iniziale composto da '0'."
        required: false
        style: form
        explode: true
        schema:
          maxLength: 38
          minLength: 38
          pattern: "^0\\d{37}$"
          type: string
      responses:
        "200":
          description: OK
          headers:
            retry-after:
              description: Numero di millisecondi di attesa prima di effettuare una
                nuova lettura di eventi. <br/> Sarà valorizzato a zero se ci sono
                eventi in coda che non sono stati forniti per  raggiunta dimensione
                massima della risposta. <br/> Sarà maggiore di zero se gli eventi
                in coda sono stati tutti inviati.
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressResponse'
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "429":
          description: Too Many Requests
          headers:
            retry-after:
              description: Numero di millisecondi di attesa prima di effettuare una
                nuova lettura di eventi.
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    PreLoadBulkRequest:
      maxItems: 15
      minItems: 1
      type: array
      items:
        $ref: '#/components/schemas/PreLoadRequest'
    PnStatusResponse:
      title: Stato attuale di PN
      required:
      - functionalities
      - openIncidents
      type: object
      properties:
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: integer
          description: Bad Request
          format: int32
          example: 400
        title:
          maxLength: 64
          pattern: "^[ -~]{0,64}$"
          type: string
          description: The server cannot process the request
          example: Bad Request
        detail:
          maxLength: 4096
          pattern: "^.{0,4096}$"
          type: string
          description: The server cannot process the request
          example: Bad Request
        functionalities:
          title: elenco funzionalità di PN
          type: array
          description: Un array che comprende tutti i possibili valori dell'enum _PnFunctionality_
          items:
            $ref: '#/components/schemas/PnFunctionality'
        openIncidents:
          title: elenco disservizi correnti
          type: array
          description: Al più uno per funzionalità
          items:
            $ref: '#/components/schemas/PnDowntimeEntry'
      description: Elenco delle funzionalità della piattaforma ed elenco dei disservizi
        noti e attivi  al momento della richiesta. I disservizi (_openIncidents_)
        segnalati sono al più uno  per funzionalità; gli attributi _endDate_ e _legalFactId_
        non saranno valorizzati.
    PreLoadRequest:
      title: Richiesta di precaricamento di un File
      required:
      - sha256
      type: object
      properties:
        preloadIdx:
          title: Id della richiesta di precaricamento di un file
          maxLength: 512
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]{1,512}$"
          type: string
          description: "Identificativo univoco all'interno della request HTTP, serve\
            \ per correlare la risposta. Stringa alfanumerica con caratteri utilizzabili\
            \ in un nome file."
        contentType:
          title: MIME type del file che verrà caricato
          maxLength: 16
          minLength: 15
          pattern: ^application\/(pdf|json)$
          type: string
          description: |-
            Il MIME type dell'allegato che dovrà essere caricato. Attualmente sono supportati
              - application/pdf
              - application/json
        sha256:
          title: checksum sha256 del file che verrà caricato
          maxLength: 44
          minLength: 44
          pattern: "^[A-Za-z0-9+\\/]{43}=|[A-Za-z0-9+\\/]{44}$"
          type: string
          description: "checksum sha256, codificato in base 64, del contenuto binario\
            \ del file che verrà caricato"
          example: jezIVxlG1M1woCSUngM6KipUN3/p8cG5RMIPnuEanlE=
    PreLoadResponse:
      title: Informazioni per il caricamento file
      type: object
      properties:
        preloadIdx:
          maxLength: 512
          minLength: 1
          pattern: "^[a-zA-Z0-9._-]{1,512}$"
          type: string
          description: per correlazione con la richiesta. Stringa alfanumerica con
            caratteri utilizzabili in un file.
        secret:
          type: string
          description: Token aggiuntivo per far si che sia necessario intercettare
            anche gli  header e non solo l'URL di upload del contenuto del documento.
          example: AZ23RF12
        httpMethod:
          type: string
          description: Indica se per l'upload del contenuto file bisogna utilizzare
            il metodo PUT o POST
          example: PUT
          enum:
          - POST
          - PUT
        url:
          type: string
          description: URL a cui effettuare l'upload del contenuto del documento.
          example: https://preloadpn.aws.amazon.......
        key:
          type: string
          description: la chiave restituita sarà globalmente unica e andrà utilizzata
            nella richiesta  di notifica.
          example: PN_NOTIFICATION_ATTACHMENTS-0001-301W-B9CB-9U72-WIKD
      description: Per ogni richiesta che è stata fatta viene fornito un presigned
        URL e le  informazioni per usarlo.
    NotificationPriceResponse:
      title: Notification price Response
      type: object
      properties:
        iun:
          $ref: '#/components/schemas/IUN'
        amount:
          type: integer
          description: amount in euro cents
          format: int32
        refinementDate:
          type: string
          description: data di perfezionamento per decorrenza termini localizzata
            espressa alla mezzanotte del giorno in cui si verifica l'evento
          format: date-time
        notificationViewDate:
          type: string
          description: data di perfezionamento per presa visione espressa alla mezzanotte
            del giorno in cui si verifica l'evento
          format: date-time
      description: Notification price and effective date
    NewNotificationResponse:
      title: Identificativi della richiesta di notifica
      required:
      - notificationRequestId
      - paProtocolNumber
      type: object
      properties:
        notificationRequestId:
          maxLength: 36
          pattern: "^[A-Za-z0-9+/=]{36}$"
          type: string
          description: "identificativo univoco di una richiesta di invio notifica,\
            \ non è lo IUN"
        paProtocolNumber:
          type: string
          description: Identificativo inviato dalla pubblica amministrazione
        idempotenceToken:
          type: string
          description: Ripetizione del token usato per disambiguare "richieste di
            notificazione"  effettuate con lo stesso numero di protocollo (campo _paProtocolNumber_).
      description: Contiene le informazioni per identificare una richiesta di invio
        notifica che non è ancora stata accettata da Piattaforma notifiche.
    NewNotificationRequestStatusResponseV21:
      allOf:
      - $ref: '#/components/schemas/NewNotificationRequestV21'
      - required:
        - notificationRequestId
        - notificationRequestStatus
        type: object
        properties:
          notificationRequestId:
            type: string
            description: "identificativo univoco di una richiesta di invio notifica,\
              \ non è lo IUN"
          notificationRequestStatus:
            type: string
            description: "- __WAITING__: in attesa di essere valutata - __ACCEPTED__:\
              \ richiesta di notifica accettata, lo IUN è valorizzato - __REFUSED__:\
              \ richiesta di notifica rifiutata, è valorizzato il campo _errors_"
          retryAfter:
            type: integer
            description: Numero di secondi da attendere prima di effettuare una nuova
              richiesta per  la stessa entità; valorizzato quando lo status è __WAITING__.
            format: int32
          iun:
            $ref: '#/components/schemas/IUN'
          errors:
            type: array
            description: Elenco degli errori che hanno causato il rifiuto della richiesta
              di notifica
            items:
              $ref: '#/components/schemas/ProblemError'
    Problem:
      required:
      - errors
      - status
      properties:
        type:
          type: string
          description: URI reference of type definition
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: integer
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          format: int32
          example: 503
        title:
          maxLength: 64
          pattern: "^[ -~]{0,64}$"
          type: string
          description: "A short, summary of the problem type. Written in english and\
            \ readable"
          example: Service Unavailable
        detail:
          maxLength: 4096
          pattern: "^.{0,4096}$"
          type: string
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
        traceId:
          type: string
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
        timestamp:
          type: string
          description: date and time referred to UTC
          format: date-time
          example: 2022-07-27T12:22:33.444Z
        errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProblemError'
    ProblemError:
      required:
      - code
      properties:
        code:
          type: string
          description: "Internal code of the error, in human-readable format"
          example: PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
        element:
          type: string
          description: Parameter or request body field name for validation error
          example: "body.order.item[2].quantity"
        detail:
          maxLength: 1024
          type: string
          description: A human readable explanation specific to this occurrence of
            the problem.
          example: Parameter not valid
    FullSentNotificationV21:
      description: Le informazioni riguardanti una notifica (richiesta di notifica
        accettata) e il  processo di inoltro della notifica verso il cittadino.
      allOf:
      - $ref: '#/components/schemas/SentNotificationV21'
      - required:
        - notificationStatus
        - notificationStatusHistory
        - timeline
        type: object
        properties:
          notificationStatus:
            $ref: '#/components/schemas/NotificationStatus'
          notificationStatusHistory:
            $ref: '#/components/schemas/NotificationStatusHistory'
          timeline:
            type: array
            description: elenco dettagliato di tutto ciò che è accaduto durrante il
              processo di notifica
            items:
              $ref: '#/components/schemas/TimelineElementV20'
    PaymentEventsRequestPagoPa:
      title: Invio eventi di pagamento da PA a PN
      required:
      - events
      type: object
      properties:
        events:
          type: array
          description: Elenco degli eventi di pagamento
          items:
            $ref: '#/components/schemas/PaymentEventPagoPa'
      description: Richiesta contenente un array di eventi di pagamento di tipo PagoPA
        di cui una Pubblica Amministrazione deve avvisare Piattaforma Notifiche.
    PaymentEventsRequestF24:
      title: Invio eventi di pagamento da PA a PN
      required:
      - events
      type: object
      properties:
        events:
          type: array
          description: Elenco degli eventi di pagamento
          items:
            $ref: '#/components/schemas/PaymentEventF24'
      description: Richiesta contenente un array di eventi di pagamento di tipo F24
        di cui una Pubblica Amministrazione deve avvisare Piattaforma Notifiche.
    PaymentEventPagoPa:
      title: Evento di pagamento PagoPa
      required:
      - amount
      - creditorTaxId
      - noticeCode
      - paymentDate
      type: object
      properties:
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        paymentDate:
          pattern: "^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(\\\
            .[0-9]+)?(Z|([+\\-][0-9]{2}):([0-9]{2}))$"
          type: string
          description: data e ora in formato ISO 8601
        amount:
          type: integer
          format: int32
      description: |-
        Comprende: <br/>
          - _noticeCode_: "codice avviso pagoPA" di pagamento del sistema pagoPA, usato per pagamento online.<br/>
          - _creditorTaxId_: codice fiscale dell'ente a cui fa riferimento il "codice avviso pagoPA". <br/>
          - data e ora del pagamento. <br/>
          - importo del pagamento in eurocent. <br/>
    PaymentEventF24:
      title: Evento di pagamento F24
      required:
      - amount
      - iun
      - paymentDate
      - recipientTaxId
      - recipientType
      type: object
      properties:
        iun:
          maxLength: 25
          minLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
        paymentDate:
          type: string
          format: date-time
        recipientTaxId:
          $ref: '#/components/schemas/TaxId'
        recipientType:
          maxLength: 2
          minLength: 2
          pattern: PF|PG
          type: string
        amount:
          type: integer
          format: int32
      description: |-
        Comprende: <br/>
          - lo _IUN_ della notifica pagata, <br/>
          - data e ora del pagamento, <br/>
          - il codice fiscale del destinatario pagatore, <br/>
          - la tipologia del destinatario pagatore (PF / PG), <br/>
          - importo del pagamento in eurocent. <br/>
    TimelineElementV20:
      type: object
      properties:
        elementId:
          type: string
          description: "Identificativo dell'elemento di timeline: insieme allo IUN\
            \ della notifica definisce in  maniera univoca l'elemento di timeline"
        timestamp:
          type: string
          description: Momento in cui avviene l'evento descritto in questo elemento
            di timeline
          format: date-time
        legalFactsIds:
          type: array
          description: Chiavi dei documenti che provano l'effettivo accadimento dell'evento
            descritto in timeline. Questo elemento
          items:
            $ref: '#/components/schemas/LegalFactsId'
        category:
          $ref: '#/components/schemas/TimelineElementCategoryV20'
        details:
          $ref: '#/components/schemas/TimelineElementDetailsV20'
      additionalProperties: false
    NotificationStatus:
      type: string
      description: |
        stato di avanzamento del processo di notifica:
          * `IN_VALIDATION` - notifica depositata in attesa di validazione
          * `ACCEPTED` - L'ente ha depositato la notifica con successo
          * `REFUSED` - Notifica rifiutata a seguito della validazione
          * `DELIVERING` - L'invio della notifica è in corso
          * `DELIVERED` - La notifica è stata consegnata a tutti i destinatari
          * `VIEWED` - Il destinatario ha letto la notifica entro il termine stabilito
          * `EFFECTIVE_DATE` - Il destinatario non ha letto la notifica entro il termine stabilito
          * `PAID` - Uno dei destinatari ha pagato la notifica
          * `UNREACHABLE` - Il destinatario non è reperibile
          * `CANCELLED` - L'ente ha annullato l'invio della notifica
      enum:
      - IN_VALIDATION
      - ACCEPTED
      - REFUSED
      - DELIVERING
      - DELIVERED
      - VIEWED
      - EFFECTIVE_DATE
      - PAID
      - UNREACHABLE
      - CANCELLED
    NotificationStatusHistory:
      type: array
      description: elenco degli avanzamenti effettuati dal processo di notifica
      items:
        $ref: '#/components/schemas/NotificationStatusHistoryElement'
    LegalFactDownloadMetadataResponse:
      title: Url e metadati per il download di un allegato di una notifica
      required:
      - contentLength
      - filename
      type: object
      properties:
        filename:
          type: string
        contentLength:
          type: number
          description: "dimensione, in byte, del contenuto."
          format: decimal32
          example: 54092
        url:
          type: string
          description: URL preautorizzato a cui effettuare una richiesta GET per ottenere
            il  contenuto del documento. Presente solo se il documento è pronto per
            il download.
        retryAfter:
          type: number
          description: Stima del numero di secondi da aspettare prima che il contenuto
            del  documento sia scaricabile.
          format: decimal32
      description: |-
        I due campi più importanti sono __url__ e __retryAfter__. <br/>
          - __url__ è presente se il file è pronto per essere scaricato ed indica l'url a cui fare GET.
          - __retryAfter__ indica che il file non è stato archiviato e bisognerà aspettare un numero di
            secondi non inferiore a quanto indicato dal campo _retryAfter_. <br/>
    # F24Metadata:
    #   type: object
    #   properties:
    #     f24Standard:
    #       nullable: true
    #       allOf:
    #       - $ref: '#/components/schemas/F24Standard'
    #     f24Simplified:
    #       nullable: true
    #       allOf:
    #       - $ref: '#/components/schemas/F24Simplified'
    #     f24Excise:
    #       nullable: true
    #       allOf:
    #       - $ref: '#/components/schemas/F24Excise'
    #     f24Elid:
    #       nullable: true
    #       allOf:
    #       - $ref: '#/components/schemas/F24Elid'
    #   description: "è richiesto uno e uno solo tra le propeties f24Standard, f24Simplified, f24Excise, f24Elid"
    RequestStatus:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          description: |
            Cancellation request status:
              - OK
        details:
          maxItems: 9999
          type: array
          items:
            $ref: '#/components/schemas/StatusDetail'
      description: Response to cancellation async call
    NewNotificationRequestStatusResponse:
      allOf:
      - $ref: '#/components/schemas/NewNotificationRequest'
      - required:
        - notificationRequestId
        - notificationRequestStatus
        type: object
        properties:
          notificationRequestId:
            type: string
            description: "identificativo univoco di una richiesta di invio notifica,\
              \ non è lo IUN"
          notificationRequestStatus:
            type: string
            description: "- __WAITING__: in attesa di essere valutata - __ACCEPTED__:\
              \ richiesta di notifica accettata, lo IUN è valorizzato - __REFUSED__:\
              \ richiesta di notifica rifiutata, è valorizzato il campo _errors_"
          retryAfter:
            type: integer
            description: Numero di secondi da attendere prima di effettuare una nuova
              richiesta per  la stessa entità; valorizzato quando lo status è __WAITING__.
            format: int32
          iun:
            $ref: '#/components/schemas/IUN'
          errors:
            type: array
            description: Elenco degli errori che hanno causato il rifiuto della richiesta
              di notifica
            items:
              $ref: '#/components/schemas/ProblemError'
    FullSentNotification:
      description: Le informazioni riguardanti una notifica (richiesta di notifica
        accettata) e il  processo di inoltro della notifica verso il cittadino.
      allOf:
      - $ref: '#/components/schemas/SentNotification'
      - required:
        - notificationStatus
        - notificationStatusHistory
        - timeline
        type: object
        properties:
          notificationStatus:
            $ref: '#/components/schemas/NotificationStatus'
          notificationStatusHistory:
            $ref: '#/components/schemas/NotificationStatusHistory'
          timeline:
            type: array
            description: elenco dettagliato di tutto ciò che è accaduto durrante il
              processo di notifica
            items:
              $ref: '#/components/schemas/TimelineElement'
    FullSentNotificationV20:
      description: Le informazioni riguardanti una notifica (richiesta di notifica
        accettata) e il  processo di inoltro della notifica verso il cittadino.
      allOf:
      - $ref: '#/components/schemas/SentNotification'
      - required:
        - notificationStatus
        - notificationStatusHistory
        - timeline
        type: object
        properties:
          notificationStatus:
            $ref: '#/components/schemas/NotificationStatus'
          notificationStatusHistory:
            $ref: '#/components/schemas/NotificationStatusHistory'
          timeline:
            type: array
            description: elenco dettagliato di tutto ciò che è accaduto durrante il
              processo di notifica
            items:
              $ref: '#/components/schemas/TimelineElementV20'
    TimelineElement:
      type: object
      properties:
        elementId:
          type: string
          description: "Identificativo dell'elemento di timeline: insieme allo IUN\
            \ della notifica definisce in  maniera univoca l'elemento di timeline"
        timestamp:
          type: string
          description: Momento in cui avviene l'evento descritto in questo elemento
            di timeline
          format: date-time
        legalFactsIds:
          type: array
          description: Chiavi dei documenti che provano l'effettivo accadimento dell'evento
            descritto in timeline. Questo elemento
          items:
            $ref: '#/components/schemas/LegalFactsId'
        category:
          $ref: '#/components/schemas/TimelineElementCategory'
        details:
          $ref: '#/components/schemas/TimelineElementDetails'
      additionalProperties: false
    PnFunctionality:
      title: Funzionalità di PN
      type: string
      description: "- __NOTIFICATION_CREATE__: la possibilità di creare nuove notifiche.\n\
        - __NOTIFICATION_VISUALIZATION__: la possibilità di visualizzare le notifiche\
        \ e scaricare gli atti. \n- __NOTIFICATION_WORKFLOW__: l'avanzamento del processo\
        \ di notifica. "
      enum:
      - NOTIFICATION_CREATE
      - NOTIFICATION_VISUALIZATION
      - NOTIFICATION_WORKFLOW
      x-enum-varnames:
      - NOTIFICATION_CREATE
      - NOTIFICATION_VISUALIZATION
      - NOTIFICATION_WORKFLOW
    PnFunctionalityStatus:
      type: string
      enum:
      - KO
      - OK
    PnDowntimeEntry:
      title: Dati relativi ad un disservizio di PN.
      required:
      - functionality
      - startDate
      - status
      type: object
      properties:
        functionality:
          $ref: '#/components/schemas/PnFunctionality'
        status:
          $ref: '#/components/schemas/PnFunctionalityStatus'
        startDate:
          title: data inizio disservizio
          type: string
          format: date-time
        endDate:
          title: data fine disservizio
          type: string
          description: se il disservizio è ancora attivo questo campo sarà assente
            o con valore _null_
          format: date-time
        legalFactId:
          title: id dell'atto opponibile a terzi
          type: string
          description: Se assente o valorizzato _null_ indica che l'atto opponibile
            a terzi non è ancora disponibile. Questo avviene per i disservizi ancora
            aperti e per i disservizi  terminati da pochi minuti. <br/> Questo valore
            è da utilizzare con l'API _getLegalFact_ di questo stesso servizio.
        fileAvailable:
          type: boolean
    TaxId:
      maxLength: 16
      minLength: 11
      pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
      type: string
      description: C.F. persona fisica o persona giuridica (Partita iva)
    Denomination:
      maxLength: 80
      minLength: 1
      pattern: ^.*$
      type: string
      description: Denominazione ente o persona fisica / ragione sociale
    NotificationDigitalAddress:
      required:
      - address
      - type
      type: object
      properties:
        type:
          type: string
          description: "tipo di indirizzo PEC, REM, SERCQ, ..."
          enum:
          - PEC
        address:
          maxLength: 320
          pattern: "^([a-zA-Z0-9]+(?:[.\\-_][a-zA-Z0-9]+){0,10}@[a-zA-Z0-9]+(?:[.-][a-zA-Z0-9]+){0,10}(?:\\\
            .[a-zA-Z0-9]{2,10}))$"
          type: string
          description: Indirizzo PEC o REM che il mittente della notifica intende
            utilizzare per  raggiungere il destinatario.
          example: account@domain.it
      description: Indirizzo di invio della notifica
    NotificationPhysicalAddress:
      required:
      - address
      - municipality
      type: object
      properties:
        at:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: Campo "presso" dell'indirizzo
        address:
          maxLength: 1024
          minLength: 2
          pattern: ^.*$
          type: string
          description: Indirizzo del domicilio fisico
        addressDetails:
          maxLength: 1024
          pattern: ^.*$
          type: string
          description: Seconda riga dell'indirizzo fisico
        zip:
          maxLength: 15
          minLength: 0
          pattern: ^(\w|\ |\-)*$
          type: string
          description: Codice di avviamento postale. In caso di invio estero diventa
            facoltativo
        municipality:
          maxLength: 256
          minLength: 2
          pattern: ^.*$
          type: string
          description: Comune
        municipalityDetails:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: Frazione o località
        province:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: Provincia
        foreignState:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: Denominazione paese estero
      description: Indirizzo fisico
    noticeCode:
      maxLength: 18
      minLength: 18
      pattern: ^\d+$
      type: string
      description: Payment notice number  numero avviso
      example: "302000100000019421"
    paTaxId:
      maxLength: 11
      minLength: 11
      pattern: ^\d+$
      type: string
      description: Payment PA fiscal code
      example: "77777777777"
    NotificationAttachmentDigests:
      required:
      - sha256
      type: object
      properties:
        sha256:
          maxLength: 44
          minLength: 44
          pattern: "^[A-Za-z0-9+\\/]{43}=|[A-Za-z0-9+\\/]{44}$"
          type: string
          description: Digest "sha256" della codifica binaria dell'allegato in base64
          example: jezIVxlG1M1woCSUngM6KipUN3/p8cG5RMIPnuEanlE=
      description: Codici per la verifica del corretto caricamento di un allegato
    NotificationAttachmentBodyRef:
      required:
      - key
      - versionToken
      type: object
      properties:
        key:
          maxLength: 512
          pattern: "^(safestorage:\\/\\/)?[A-Za-z0-9._-]+$"
          type: string
          description: Chiave in cui è stato salvato l'allegato
        versionToken:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: "Token per recuperare l'esatta istanza dell'allegato, che dovrà\
            \ coincidere con l'__x-amz-version-id__ ottenuto nell'header della response\
            \ in fase di upload del documento ad esso associato."
      description: Riferimento all'allegato precaricato
    NotificationAttachment:
      required:
      - contentType
      - digests
      - ref
      type: object
      properties:
        digests:
          $ref: '#/components/schemas/NotificationAttachmentDigests'
        contentType:
          maxLength: 15
          minLength: 15
          pattern: ^application\/pdf$
          type: string
          description: "tipo di contenuto dell'allegato, supportato application/pdf"
        ref:
          $ref: '#/components/schemas/NotificationAttachmentBodyRef'
      description: Un allegato della notifica.
    NotificationPaymentAttachment:
      description: Un modulo di pagamento allegato alla notifica
      allOf:
      - $ref: '#/components/schemas/NotificationAttachment'
    PagoPaPayment:
      title: Informazioni per effettuare il pagamento con sistema pagoPA
      required:
      - applyCost
      - creditorTaxId
      - noticeCode
      type: object
      properties:
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        applyCost:
          type: boolean
          description: Flag per indicare se l'avviso pagoPa deve contenere i costi
            di notifica
          nullable: false
        attachment:
          $ref: '#/components/schemas/NotificationPaymentAttachment'
      description: |-
        Informazioni utili per effettuare il pagamento di una notifica, sono associate al destinatario perché le spese di notifica possono differire a seconda del canale di notifica utilizzato. <br/>
          - _noticeCode_: "codice avviso pagoPA" di pagamento del sistema pagoPA, usato per pagamento online.<br/>
          - _creditorTaxId_: codice fiscale dell'ente a cui fa riferimento il "codice avviso pagoPA". <br/>
          - _applyCost_: flag per indicare se l'avviso pagoPA deve contenere i costi di notifica. <br/>
          - _pagoPaForm_: riferimento al PDF contenete il bollettino pagoPA<br/>
    NotificationMetadataAttachment:
      required:
      - contentType
      - digests
      - ref
      type: object
      properties:
        digests:
          $ref: '#/components/schemas/NotificationAttachmentDigests'
        contentType:
          maxLength: 16
          minLength: 16
          pattern: ^application\/json$
          type: string
          description: "tipo di contenuto dell'allegato, supportato application/json"
        ref:
          $ref: '#/components/schemas/NotificationAttachmentBodyRef'
      description: Un metadato allegato della notifica.
    F24Payment:
      title: Informazioni per effettuare il pagamento tramite modello F24
      required:
      - applyCost
      - metadataAttachment
      - title
      type: object
      properties:
        title:
          type: string
          description: Titolo del documento pdf da mostrare all'utente
        applyCost:
          type: boolean
          description: Flag per indicare se il modello F24 deve contere i costi di
            notifica
          nullable: false
        metadataAttachment:
          $ref: '#/components/schemas/NotificationMetadataAttachment'
      description: |-
        Informazioni utili per effettuare il pagamento di una notifica, sono associate al destinatario perché le spese di notifica possono differire a seconda del canale di notifica utilizzato. <br/>
          - _title_: titolo del documento pdf da mostrare all'utente .<br/>
          - _applyCost_: flag per indicare se il modello F24 deve contenere i costi di notifica.<br/>
          - _metadataAttachment_: riferimento ai metadati per la generazione del modello F24.<br/>
    NotificationPaymentItem:
      minProperties: 1
      properties:
        pagoPa:
          $ref: '#/components/schemas/PagoPaPayment'
        f24:
          $ref: '#/components/schemas/F24Payment'
    NotificationPayments:
      title: Pagamenti collegati alla notifica per il destinatario
      type: array
      description: Lista dei pagamenti collegati alla notifica per il destinatario.
        Possono essere pagamenti rateali o alternativi
      items:
        $ref: '#/components/schemas/NotificationPaymentItem'
    NotificationRecipientV21:
      required:
      - denomination
      - physicalAddress
      - recipientType
      - taxId
      type: object
      properties:
        recipientType:
          type: string
          description: "Tipologia di destinatario: Persona Fisica (PF) o Persona Giuridica\
            \ (PG)"
          enum:
          - PF
          - PG
        taxId:
          $ref: '#/components/schemas/TaxId'
        denomination:
          $ref: '#/components/schemas/Denomination'
        digitalDomicile:
          $ref: '#/components/schemas/NotificationDigitalAddress'
        physicalAddress:
          $ref: '#/components/schemas/NotificationPhysicalAddress'
        payments:
          $ref: '#/components/schemas/NotificationPayments'
      description: Informazioni sui destinatari
    NotificationDocument:
      description: Un documento da notificare
      allOf:
      - $ref: '#/components/schemas/NotificationAttachment'
      - type: object
        properties:
          title:
            maxLength: 512
            minLength: 1
            pattern: ^.*$
            type: string
            description: Titolo del documento allegato. Stringa alfanumerica con caratteri
              utilizzabili in un nome file.
          docIdx:
            maxLength: 3
            pattern: ^\\d+$
            type: string
            description: Indice del documento partendo da 0.
    NotificationFeePolicy:
      type: string
      description: "Politica di addebitamento dei costi di notifica. <br/> - _FLAT_RATE_:\
        \ costo forfettario fisso. <br/> - _DELIVERY_MODE_: costo calcolato in base\
        \ all'effettivo percorso di notifica. <br/>"
      enum:
      - FLAT_RATE
      - DELIVERY_MODE
    IUN:
      maxLength: 25
      minLength: 25
      pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
      type: string
      description: Identificativo Univoco Notifica
    NewNotificationRequestV21:
      required:
      - documents
      - notificationFeePolicy
      - paProtocolNumber
      - physicalCommunicationType
      - recipients
      - senderDenomination
      - senderTaxId
      - subject
      type: object
      properties:
        idempotenceToken:
          maxLength: 256
          pattern: "^[ -~]*$"
          type: string
          description: Identificativo utilizzabile dal chiamante per disambiguare
            differenti  "richieste di notificazione" effettuate con lo stesso numero
            di protocollo  (campo _paProtocolNumber_). Questo può essere necessario
            in caso di  "richiesta di notifica" rifiutata per errori nei codici di
            verifica degli allegati.
        paProtocolNumber:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: Numero di protocollo che la PA mittente assegna alla notifica
            stessa
        subject:
          maxLength: 134
          pattern: ^.*$
          type: string
          description: titolo della notifica
        abstract:
          maxLength: 1024
          pattern: ^.*$
          type: string
          description: descrizione sintetica della notifica
        recipients:
          type: array
          description: Informazioni sui destinatari
          items:
            $ref: '#/components/schemas/NotificationRecipientV21'
        documents:
          minItems: 1
          type: array
          description: Documenti notificati
          items:
            $ref: '#/components/schemas/NotificationDocument'
        notificationFeePolicy:
          $ref: '#/components/schemas/NotificationFeePolicy'
        cancelledIun:
          $ref: '#/components/schemas/IUN'
        physicalCommunicationType:
          type: string
          description: Tipologia comunicazione fisica
          enum:
          - AR_REGISTERED_LETTER
          - REGISTERED_LETTER_890
        senderDenomination:
          $ref: '#/components/schemas/Denomination'
        senderTaxId:
          $ref: '#/components/schemas/paTaxId'
        group:
          maxLength: 1024
          pattern: "^[ -~]*$"
          type: string
          description: Gruppo di utenti dell'ente mittente che può visualizzare la
            notifica
        amount:
          type: integer
          description: Importo della notifica in eurocent
          format: int32
        paymentExpirationDate:
          maxLength: 10
          minLength: 10
          pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$"
          type: string
          description: Data di scadenza del pagamento nel formato YYYY-MM-DD riferito
            all'Italia
        taxonomyCode:
          maxLength: 7
          minLength: 7
          pattern: "^([0-9]{6}[A-Z]{1})$"
          type: string
          description: "Codice tassonomico della notifica basato sulla definizione\
            \ presente nell'allegato 2 capitolo C del bando [__AVVISO PUBBLICO MISURA\
            \ 1.4.5 PIATTAFORMA NOTIFICHE DIGITALI__](https://pnrrcomuni.fondazioneifel.it/bandi_public/Bando/325)"
          default: 010101P
        paFee:
          maximum: 100
          minimum: 0
          type: integer
          description: Costo espresso in eurocent che la PA imputa per la notifica
          format: int32
        pagoPaIntMode:
          type: string
          description: "Modalitá di integrazione pagoPA per l'attualizazione del costo\
            \ della notifica. <br/> - _NONE_: nessuna attualizzazione. <br/> - _SYNC_:\
            \ modalitá sincrona. <br/> - _ASYNC_: modalitá asincrona. (non ancora\
            \ supportata)<br/>"
          enum:
          - NONE
          - SYNC
          - ASYNC
      description: I campi utilizzati per la creazione di una nuova Notifica.
    SentNotificationV21:
      description: Le informazioni riguardanti una richiesta di notifica accettata
      allOf:
      - $ref: '#/components/schemas/NewNotificationRequestV21'
      - required:
        - iun
        - sentAt
        type: object
        properties:
          senderPaId:
            maxLength: 256
            pattern: ^.*$
            type: string
            description: Identificativo (non IPA) della PA mittente che ha eseguito
              l'onboarding su SelfCare.
          iun:
            $ref: '#/components/schemas/IUN'
          sentAt:
            type: string
            description: Momento di ricezione della notifica da parte di PN
            format: date-time
          cancelledByIun:
            $ref: '#/components/schemas/IUN'
          documentsAvailable:
            type: boolean
            description: Indica se i documenti notificati sono ancora disponibili.
    TimelineElementId:
      type: string
    NotificationStatusHistoryElement:
      required:
      - activeFrom
      - relatedTimelineElements
      - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/NotificationStatus'
        activeFrom:
          type: string
          description: data e ora di raggiungimento dello stato di avanzamento
          format: date-time
        relatedTimelineElements:
          type: array
          description: Eventi avvenuti nello stato
          items:
            $ref: '#/components/schemas/TimelineElementId'
      description: elenco degli avanzamenti effettuati dal processo di notifica
    LegalFactCategory:
      title: Tipi di atti opponibili a terzi
      type: string
      description: |-
        Tipi di atti opponibili a terzi che Piattaforma Notifiche mette a disposizione dei suoi utenti.
          - _SENDER_ACK_: atto di "presa in carico" di una notifica
          - _DIGITAL_DELIVERY_: ...
      enum:
      - SENDER_ACK
      - DIGITAL_DELIVERY
      - ANALOG_DELIVERY
      - RECIPIENT_ACCESS
      - PEC_RECEIPT
      - ANALOG_FAILURE_DELIVERY
    LegalFactsId:
      required:
      - category
      - key
      type: object
      properties:
        key:
          maxLength: 512
          pattern: "^(safestorage:\\/\\/)?[A-Za-z0-9._-]+$"
          type: string
          description: Chiave dell'atto opponibile a terzi generato durante il processo
            di consegna
        category:
          $ref: '#/components/schemas/LegalFactCategory'
      description: Chiavi dei documenti generati durante il processo di consegna cartacea
    TimelineElementCategoryV20:
      type: string
      description: "stato di avanzamento del processo di notifica:`\n  * `SENDER_ACK_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'atto opponibile a terzi di presa\
        \ in carico per il mittente a safe storage\n  * `VALIDATE_NORMALIZE_ADDRESSES_REQUEST`\
        \ - Invio della richiesta di validazione e normalizzazione indirizzi fisici\
        \ presenti nella richiesta di notifica\n  * `NORMALIZED_ADDRESS` - Salvataggio\
        \ indirizzi normalizzati\n  * `REQUEST_ACCEPTED` - Richiesta di notifica accettata\
        \ a seguito dei controlli di validazione\n  * `REQUEST_REFUSED` - Richiesta\
        \ di notifica rifiutata per fallimento di validazione\n  * `SEND_COURTESY_MESSAGE`\
        \ - Invio di un messaggio di cortesia\n  * `GET_ADDRESS` - Disponibilità dell’\
        indirizzo specifico (domicilio digitale di piattaforma, domicilio digitale\
        \ speciale, domicilio digitale generale, indirizzo fisico sulla notifica o\
        \ sui registri nazionali)\n  * `PUBLIC_REGISTRY_CALL` - Richiesta ai registri\
        \ pubblici per ottenere domicilio digitale generale o per ottenere indirizzo\
        \ fisico da ANPR, da registro della imprese, da anagrafe tributaria.\n  *\
        \ `PUBLIC_REGISTRY_RESPONSE` - Ricevuta la risposta dei registri pubblici\n\
        \  * `SCHEDULE_ANALOG_WORKFLOW` - Pianificazione del workflow per invio cartaceo\n\
        \  * `SCHEDULE_DIGITAL_WORKFLOW` -Pianificazione del workflow per invio digitale\
        \ (PEC) del secondo tentativo in caso di fallimento del primo.\n  * `PREPARE_DIGITAL_DOMICILE`\
        \ - Preparazione per l’invio dell’avviso digitale.Va a valutare la timeline\
        \ per capire quale sarà il prossimo indirizzo da usare.\n  * `SEND_DIGITAL_DOMICILE`\
        \ - Invio digitale dell’avviso di notifica\n  * `SEND_DIGITAL_PROGRESS` -\
        \ Tentativo di Invio PEC ad un determinato indirizzo.\n  * `SEND_DIGITAL_FEEDBACK`\
        \ - Ottenuto esito ad un invio digitale\n  * `SCHEDULE_REFINEMENT` - Pianificato\
        \ il perfezionamento per decorrenza termini\n  * `REFINEMENT` - Perfezionamento\
        \ per decorrenza termini\n  * `DIGITAL_DELIVERY_CREATION_REQUEST` - Invio\
        \ della richiesta di creazione dell'atto opponibile a terzi di chiusura del\
        \ workflow digitale a safe storage\n  * `DIGITAL_SUCCESS_WORKFLOW` - Completato\
        \ con successo il workflow di invio digitale\n  * `DIGITAL_FAILURE_WORKFLOW`\
        \ - Completato con fallimento il workflow di invio digitale: tutti i tentativi\
        \ di invio ai domicili digitali sono falliti.\n  * `ANALOG_SUCCESS_WORKFLOW`\
        \ - Completato con successo il workflow di invio cartaceo \n  * `ANALOG_FAILURE_WORKFLOW`\
        \ - Completato con fallimento il workflow di invio cartaceo NOTA: se per tutti\
        \ i destinatari si conclude il workflow con fallimento verrà scatenato l’\
        evento COMPLETELY_UNREACHABLE\n  * `PREPARE_SIMPLE_REGISTERED_LETTER` - Invio\
        \ richiesta di prepare (preparazione ad invio) raccomandata semplice a paperChannel\n\
        \  * `SEND_SIMPLE_REGISTERED_LETTER` - Invio di raccomandata semplice\n  *\
        \ `SEND_SIMPLE_REGISTERED_LETTER_PROGRESS` - Ricezione informazioni intermedia\
        \ relative ad una notificazione cartacea semplice\n  * `NOTIFICATION_VIEWED_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'atto opponibile a terzi di presa\
        \ visione a safe storage\n  * `NOTIFICATION_VIEWED` - Visualizzazione della\
        \ notifica (perfeziona la notifica se non già perfezionata per decorrenza\
        \ termini o da altro destinatario)\n  * `PREPARE_ANALOG_DOMICILE` - Invio\
        \ richiesta di prepare (preparazione ad invio) cartaceo a paperChannel\n \
        \ * `SEND_ANALOG_DOMICILE` - Invio cartaceo dell’avviso di notifica\n  * `SEND_ANALOG_PROGRESS`\
        \ - Ricezione informazioni intermedia relative ad una notificazione cartacea\n\
        \  * `SEND_ANALOG_FEEDBACK` - Ricezione esito dell'invio cartaceo\n  * `COMPLETELY_UNREACHABLE_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'atto (simile a opponibile a terzi)\
        \ di completamento con fallimento del workflow di invio cartaceo\n  * `COMPLETELY_UNREACHABLE`\
        \ - Tutti i destinatari risultano irraggiungibili\n  * `AAR_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'AAR (Avviso di Avvenuta Ricezione)\
        \ a safe storage \n  * `AAR_GENERATION` - Generazione dell’AAR (Avviso di\
        \ Avvenuta Ricezione)\n  * `PAYMENT` - Ricezione pagamento della notifica\n\
        \  * `NOT_HANDLED` - Per la sperimentazione l'invio analogico non è previsto,\
        \ viene inserito tale elemento di timeline\n  * `PROBABLE_SCHEDULING_ANALOG_DATE`\
        \ - Data probabile di inizio del flusso analogico\n  * `NOTIFICATION_CANCELLATION_REQUEST`\
        \ - Richiesta di annullamento di una notifica\n  * `NOTIFICATION_CANCELLED`\
        \ - Notifica annullata\n  * `PREPARE_ANALOG_DOMICILE_FAILURE` - Fallimento\
        \ della richiesta di prepare (preparazione ad invio) cartaceo a paperChannel\n"
      enum:
      - SENDER_ACK_CREATION_REQUEST
      - VALIDATE_NORMALIZE_ADDRESSES_REQUEST
      - NORMALIZED_ADDRESS
      - REQUEST_ACCEPTED
      - SEND_COURTESY_MESSAGE
      - GET_ADDRESS
      - PUBLIC_REGISTRY_CALL
      - PUBLIC_REGISTRY_RESPONSE
      - SCHEDULE_ANALOG_WORKFLOW
      - SCHEDULE_DIGITAL_WORKFLOW
      - PREPARE_DIGITAL_DOMICILE
      - SEND_DIGITAL_DOMICILE
      - SEND_DIGITAL_PROGRESS
      - SEND_DIGITAL_FEEDBACK
      - REFINEMENT
      - SCHEDULE_REFINEMENT
      - DIGITAL_DELIVERY_CREATION_REQUEST
      - DIGITAL_SUCCESS_WORKFLOW
      - DIGITAL_FAILURE_WORKFLOW
      - ANALOG_SUCCESS_WORKFLOW
      - ANALOG_FAILURE_WORKFLOW
      - PREPARE_SIMPLE_REGISTERED_LETTER
      - SEND_SIMPLE_REGISTERED_LETTER
      - SEND_SIMPLE_REGISTERED_LETTER_PROGRESS
      - NOTIFICATION_VIEWED_CREATION_REQUEST
      - NOTIFICATION_VIEWED
      - PREPARE_ANALOG_DOMICILE
      - SEND_ANALOG_DOMICILE
      - SEND_ANALOG_PROGRESS
      - SEND_ANALOG_FEEDBACK
      - PAYMENT
      - COMPLETELY_UNREACHABLE
      - COMPLETELY_UNREACHABLE_CREATION_REQUEST
      - REQUEST_REFUSED
      - AAR_CREATION_REQUEST
      - AAR_GENERATION
      - NOT_HANDLED
      - PROBABLE_SCHEDULING_ANALOG_DATE
      - NOTIFICATION_CANCELLATION_REQUEST
      - NOTIFICATION_CANCELLED
      - PREPARE_ANALOG_DOMICILE_FAILURE
    SenderAckCreationRequestDetails:
      type: object
      properties:
        legalFactId:
          type: string
          description: Identificativo dell'atto opponibile a terzi del quale è stata
            richiesta la creazione
    PhysicalAddress:
      required:
      - address
      - municipality
      type: object
      properties:
        at:
          type: string
          description: Campo "presso" dell'indirizzo
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        address:
          type: string
          description: Indirizzo del domicilio fisico
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        addressDetails:
          type: string
          description: Seconda riga dell'indirizzo fisico
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        zip:
          type: string
          description: Codice di avviamento postale. In caso di invio estero diventa
            facoltativo
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        municipality:
          type: string
          description: Comune in cui l'indirizzo si trova
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        municipalityDetails:
          type: string
          description: Frazione o località
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        province:
          type: string
          description: Provincia in cui si trova l'indirizzo
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        foreignState:
          type: string
          description: Denominazione paese estero
          x-field-extra-annotation: '@lombok.ToString.Exclude'
      description: Indirizzo fisico scoperto durante fase di consegna
    NormalizedAddressDetails:
      required:
      - normalizedAddress
      - oldAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        oldAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        normalizedAddress:
          $ref: '#/components/schemas/PhysicalAddress'
    NotificationRequestAcceptedDetails:
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    AnalogFailureWorkflowDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        generatedAarUrl:
          type: string
          description: Chiave per recupero da safe-storage del documento aar
    AnalogSuccessWorkflowDetails:
      required:
      - physicalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
    EndWorkflowStatus:
      type: string
      description: Stato chiusura workflow
      enum:
      - SUCCESS
      - FAILURE
    CompletelyUnreachableCreationRequestDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        legalfactId:
          type: string
          description: Identificativo dell'atto opponibile a terzi del quale è stata
            richiesta la creazione
        endWorkflowStatus:
          $ref: '#/components/schemas/EndWorkflowStatus'
        completionWorkflowDate:
          type: string
          description: Data chiusura workflow
          format: date-time
    CompletelyUnreachableDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        legalFactGenerationDate:
          type: string
          description: Data generazione atto opponibile a terzi allegato
          format: date-time
    DigitalAddress:
      required:
      - address
      - type
      type: object
      properties:
        type:
          type: string
          description: "tipo di indirizzo PEC, REM, SERCQ, ..."
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        address:
          type: string
          description: account@domain
          x-field-extra-annotation: '@lombok.ToString.Exclude'
      description: Indirizzo di invio della notifica
    DigitalDeliveryCreationRequestDetails:
      required:
      - digitalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        endWorkflowStatus:
          $ref: '#/components/schemas/EndWorkflowStatus'
        completionWorkflowDate:
          type: string
          description: Data chiusura workflow
          format: date-time
        legalfactId:
          type: string
          description: Identificativo dell'atto opponibile a terzi del quale è stata
            richiesta la creazione
    DigitalFailureWorkflowDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    DigitalSuccessWorkflowDetails:
      required:
      - digitalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
    DigitalAddressSource:
      type: string
      description: sorgente indirizzo di invio della notifica
      enum:
      - PLATFORM
      - SPECIAL
      - GENERAL
    GetAddressInfoDetails:
      required:
      - attemptDate
      - digitalAddressSource
      - isAvailable
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        isAvailable:
          type: boolean
          description: Disponibilità indirizzo
        attemptDate:
          type: string
          description: Data tentativo
          format: date-time
    RaddType:
      type: string
      description: |
        tipo di Rete Anti Digital Divide <br/>
        __FSU__: Fornitore Servizio Universale <br/>
    RaddTransactionId:
      type: string
      description: Identificativo della pratica all'interno della rete RADD
    RecipientType:
      type: string
      enum:
      - PF
      - PG
    DelegateInfo:
      type: object
      properties:
        internalId:
          type: string
        taxId:
          type: string
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        operatorUuid:
          type: string
        mandateId:
          type: string
        denomination:
          type: string
          x-field-extra-annotation: '@lombok.ToString.Exclude'
        delegateType:
          $ref: '#/components/schemas/RecipientType'
    NotificationViewedCreationRequestDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        legalfactId:
          type: string
          description: Identificativo dell'atto opponibile a terzi del quale è stata
            richiesta la creazione
        eventTimestamp:
          type: string
          description: Data ricezione richiesta visualizzazione notifica
          format: date-time
        raddType:
          $ref: '#/components/schemas/RaddType'
        raddTransactionId:
          $ref: '#/components/schemas/RaddTransactionId'
        delegateInfo:
          $ref: '#/components/schemas/DelegateInfo'
    NotificationViewedDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        notificationCost:
          type: integer
          description: "costo notifica in euro cents, può essere nullo se la notifica\
            \ si è perfezionata prima per decorrenza termini"
          format: int64
          example: 1220
        raddType:
          $ref: '#/components/schemas/RaddType'
        raddTransactionId:
          $ref: '#/components/schemas/RaddTransactionId'
        delegateInfo:
          $ref: '#/components/schemas/DelegateInfo'
    DeliveryMode:
      type: string
      description: Tipologia Domiciliazione
      enum:
      - DIGITAL
      - ANALOG
    ContactPhase:
      type: string
      description: Fase in cui è avvenuta la richiesta
      enum:
      - CHOOSE_DELIVERY
      - SEND_ATTEMPT
    PublicRegistryCallDetails:
      required:
      - contactPhase
      - deliveryMode
      - recIndex
      - sendDate
      - sentAttemptMade
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        deliveryMode:
          $ref: '#/components/schemas/DeliveryMode'
        contactPhase:
          $ref: '#/components/schemas/ContactPhase'
        sentAttemptMade:
          type: integer
          description: Numero di tentativi di notificazione già effettuati
          format: int32
        sendDate:
          type: string
          description: Data invio richiesta ai public registry
          format: date-time
    PublicRegistryResponseDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
    RefinementDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        notificationCost:
          type: integer
          description: "costo notifica in euro cents, può essere nullo se la notifica\
            \ si è perfezionata prima per visualizzazione"
          format: int64
          example: 1220
    NotificationRefusedErrorV20:
      type: object
      properties:
        errorCode:
          type: string
          description: |-
            Errori di rifiuto della notifica.
              - FILE_NOTFOUND
              - FILE_SHA_ERROR
              - TAXID_NOT_VALID
              - SERVICE_UNAVAILABLE
              - FILE_PDF_INVALID_ERROR
              - FILE_PDF_TOOBIG_ERROR
              - NOT_VALID_ADDRESS
              - RECIPIENT_ID_NOT_VALID
              - F24_METADATA_NOT_VALID
              - PAYMENT_NOT_VALID
              ...
        detail:
          type: string
    RequestRefusedDetailsV20:
      type: object
      properties:
        refusalReasons:
          type: array
          description: Motivazioni che hanno portato al rifiuto della notifica
          items:
            $ref: '#/components/schemas/NotificationRefusedErrorV20'
    ScheduleAnalogWorkflowDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
    ScheduleDigitalWorkflowDetails:
      required:
      - digitalAddressSource
      - lastAttemptDate
      - recIndex
      - sentAttemptMade
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        sentAttemptMade:
          type: integer
          format: int32
        lastAttemptDate:
          type: string
          format: date-time
    ScheduleRefinementDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        schedulingDate:
          type: string
          format: date-time
    IoSendMessageResult:
      type: string
      description: Risultato invio messaggio su IO
      enum:
      - NOT_SENT_OPTIN_ALREADY_SENT
      - SENT_COURTESY
      - SENT_OPTIN
    SendCourtesyMessageDetails:
      required:
      - digitalAddress
      - recIndex
      - sendDate
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        sendDate:
          type: string
          description: data invio messaggio di cortesia
          format: date-time
        ioSendMessageResult:
          $ref: '#/components/schemas/IoSendMessageResult'
    PrepareDigitalDetails:
      required:
      - digitalAddressSource
      - recIndex
      - retryNumber
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        retryNumber:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
        attemptDate:
          type: string
          description: data tentativo precedente
          format: date-time
        nextDigitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        nextSourceAttemptsMade:
          type: integer
          description: numero del prossimo tentativo da effettuare
          format: int32
        nextLastAttemptMadeForSource:
          type: string
          description: data tentativo precedente per prossimo source
          format: date-time
    SendDigitalDetails:
      required:
      - digitalAddress
      - digitalAddressSource
      - recIndex
      - retryNumber
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        retryNumber:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
    ResponseStatus:
      type: string
      description: stato risposta ricevuta da externalChannel
      enum:
      - OK
      - KO
    SendingReceipt:
      type: object
      properties:
        id:
          type: string
        system:
          type: string
    SendDigitalFeedbackDetails:
      required:
      - digitalAddress
      - notificationDate
      - recIndex
      - responseStatus
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        responseStatus:
          $ref: '#/components/schemas/ResponseStatus'
        notificationDate:
          type: string
          description: data notifica
          format: date-time
        deliveryFailureCause:
          type: string
          description: "Codice errore, vuoto in caso di successo"
        deliveryDetailCode:
          type: string
          description: |
            Stato - Codice relativo all'evento - Descrizione:
              - PROGRESS   C000 = PREACCETTAZIONE
              - PROGRESS   C001 = ACCETTAZIONE
              - PROGRESS   C005 = PRESA_IN_CARICO
              - PROGRESS   C007 = PREAVVISO_ERRORE_CONSEGNA
              - PROGRESS   DP00 = RE-INVIO PEC CAUSA FALLIMENTO TEMPORANEO
              - PROGRESS   DP10 = TIMEOUT RICEZIONE RISULTATO
              - ERROR      C002 = NON_ACCETTAZIONE
              - ERROR      C004 = ERRORE_CONSEGNA
              - ERROR      C006 = RILEVAZIONE_VIRUS
              - ERROR      C008 = ERRORE_COMUNICAZIONE_SERVER_PEC
              - ERROR      C009 = ERRORE_DOMINIO_PEC_NON_VALIDO
              - ERROR      C010 = ERROR_INVIO_PEC
              - OK         C003 = AVVENUTA_CONSEGNA
        sendingReceipts:
          type: array
          items:
            $ref: '#/components/schemas/SendingReceipt'
    SendDigitalProgressDetails:
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        deliveryFailureCause:
          type: string
          description: "Codice errore, opzionale"
        deliveryDetailCode:
          type: string
          description: Vedi deliveryDetailCode in SendDigitalFeedbackDetails
        shouldRetry:
          type: boolean
          description: indica se il progress ha dato luogo ad un ritentativo
        digitalAddress:
          $ref: '#/components/schemas/DigitalAddress'
        digitalAddressSource:
          $ref: '#/components/schemas/DigitalAddressSource'
        notificationDate:
          type: string
          description: data notifica
          format: date-time
        sendingReceipts:
          type: array
          items:
            $ref: '#/components/schemas/SendingReceipt'
        retryNumber:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
    ServiceLevel:
      type: string
      description: Livello Servizio
      enum:
      - AR_REGISTERED_LETTER
      - REGISTERED_LETTER_890
    BaseAnalogDetails:
      required:
      - physicalAddress
      - recIndex
      - sentAttemptMade
      - serviceLevel
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        sentAttemptMade:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
        relatedRequestId:
          type: string
          description: Id relativo alla eventuale precedente richiesta di invio cartaceo
    SendAnalogDetails:
      required:
      - physicalAddress
      - recIndex
      - sentAttemptMade
      - serviceLevel
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        sentAttemptMade:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
        relatedRequestId:
          type: string
          description: Id relativo alla eventuale precedente richiesta di invio cartaceo
        productType:
          type: string
          description: |
            Tipo di invio cartaceo effettivamente inviato
              - __AR__: Raccomandata nazionale Andata e Ritorno
              - __890__: Recapito a norma della legge 890/1982
              - __RIR__: Raccomandata internazionale Andata e Ritorno
        analogCost:
          type: integer
          description: costo in eurocent dell'invio
          format: int32
        numberOfPages:
          type: integer
          description: numero delle pagina che compongono la spedizione cartacea
          format: int32
        envelopeWeight:
          type: integer
          description: peso in grammi della busta
          format: int32
        prepareRequestId:
          type: string
          description: request id della relativa richiesta di prepare
    AttachmentDetails:
      type: object
      properties:
        id:
          type: string
        documentType:
          type: string
          description: |
            Codici documentType: - Plico: Indica il plico cartaceo - AR: Indica la ricevuta di ritorno - Indagine: Indica la ricevuta dell'analisi dell'indagine - 23L: Indica la ricevuta 23L
        url:
          type: string
        date:
          type: string
          format: date-time
    SendAnalogFeedbackDetails:
      required:
      - physicalAddress
      - recIndex
      - responseStatus
      - sentAttemptMade
      - serviceLevel
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        serviceLevel:
          $ref: '#/components/schemas/ServiceLevel'
        sentAttemptMade:
          type: integer
          description: numero dei tentativi effettuati
          format: int32
        newAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        responseStatus:
          $ref: '#/components/schemas/ResponseStatus'
        notificationDate:
          type: string
          format: date-time
        deliveryFailureCause:
          type: string
          description: |
            __Motivazione di mancata consegna__ obbligatorie negli stati di mancata consegna
              - __M01__ destinatario irreperibile
              - __M02__ destinatario deceduto
              - __M03__ destinatario sconosciuto
              - __M04__ destinatario trasferito
              - __M05__ invio rifiutato
              - __M06__ indirizzo inesatto
              - __M07__ indirizzo inesistente
              - __M08__ indirizzo insufficiente
              - __F01__ - in caso di furto
              - __F02__ - in caso di smarrimento
              - __F03__ - in caso di deterioramento
        deliveryDetailCode:
          type: string
          description: |
            Formato: - __deliveryDetailCode__- [prodotto] - [statusCode] - statusDescription
              - __CON080__- [ALL] - [PROGRESS] - Stampato ed Imbustato
              - __RECRS001C__- [RS] - [OK] - Consegnato - Fascicolo Chiuso
              - __RECRS002C__- [RS] - [KO] - Mancata consegna - Fascicolo Chiuso
              - __RECRS002F__- [RS] - [KO] - Irreperibilità Assoluta - Fascicolo Chiuso
              - __RECRS003C__- [RS] - [OK] - Consegnato presso Punti di Giacenza - Fascicolo Chiuso
              - __RECRS004C__- [RS] - [OK] - Mancata consegna presso Punti di Giacenza - Fascicolo Chiuso
              - __RECRS005C__- [RS] - [OK] - Compiuta giacenza - Fascicolo Chiuso
              - __RECRS006__- [RS] - [PROGRESS] - Furto/Smarrimento/deterioramento
              - __RECRN001C__- [AR] - [OK] - Consegnato - Fascicolo Chiuso
              - __RECRN002C__- [AR] - [KO] - Mancata consegna - Fascicolo Chiuso
              - __RECRN002F__- [AR] - [KO] - Irreperibilità Assoluta - Fascicolo Chiuso
              - __RECRN003C__- [AR] - [OK] - Consegnato presso Punti di Giacenza - Fascicolo Chiuso
              - __RECRN004C__- [AR] - [KO] - Mancata consegna presso Punti di Giacenza - Fascicolo Chiuso
              - __RECRN005C__- [AR] - [OK] - Compiuta giacenza - Fascicolo Chiuso
              - __RECRN006__- [AR] - [PROGRESS] - Furto/Smarrimento/deterioramento
              - __RECAG001C__- [890] - [OK] - Consegnato - Fascicolo Chiuso
              - __RECAG002C__- [890] - [OK] - Consegnato a persona abilitata - Fascicolo Chiuso
              - __RECAG003C__- [890] - [KO] - Mancata consegna - Fascicolo Chiuso
              - __RECAG003F__- [890] - [KO] - Irreperibilità Assoluta - Fascicolo Chiuso
              - __RECAG004__- [890] - [PROGRESS] - Furto/Smarrimento/deterioramento
              - __RECAG005C__- [890] - [OK | PROGRESS] - Consegnato presso Punti di Giacenza - Fascicolo Chiuso
              - __RECAG006C__- [890] - [OK | PROGRESS] - Consegna a persona abilitata presso Punti di Giacenza - Fas. Ch.
              - __RECAG007C__- [890] - [KO | PROGRESS] - Mancata consegna presso Punti di Giacenza - Fascicolo Chiuso
              - __RECAG008C__- [890] - [PROGRESS] - Compiuta giacenza - Fascicolo Chiuso
              - __PNAG012__- [890] - [KO] - Distacco d'ufficio 23L - Fascicolo Chiuso
              - __RECRI003C__- [RIR] - [OK] - Consegnato - Fascicolo Chiuso
              - __RECRI004C__- [RIR] - [KO] - Non Consegnato - fascicolo Chiuso
              - __RECRI005__- [RIR] - [PROGRESS] - Furto/Smarrimento/deterioramento
              - __RECRSI003C__- [RIS] - [OK] - Consegnato - Fascicolo Chiuso
              - __RECRSI004C__- [RIS] - [KO] - Non Consegnato - fascicolo Chiuso
              - __RECRSI005__- [RIS] - [PROGRESS] - Furto/Smarrimento/deterioramento
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentDetails'
        sendRequestId:
          type: string
          description: RequestId della richiesta d'invio
        registeredLetterCode:
          type: string
          description: Codice della raccomandata
    BaseRegisteredLetterDetails:
      required:
      - physicalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
    SimpleRegisteredLetterDetails:
      required:
      - physicalAddress
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        physicalAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        productType:
          type: string
          description: |
            Tipo di invio cartaceo effettivamente inviato
              - __RS__: Raccomandata nazionale Semplice (per Avviso di mancato Recapito)
              - __RIS__: Raccomandata internazionale Semplice
        analogCost:
          type: integer
          description: costo in eurocent dell'invio
          format: int32
        numberOfPages:
          type: integer
          description: numero delle pagina che compongono la spedizione cartacea
          format: int32
        envelopeWeight:
          type: integer
          description: peso in grammi della busta
          format: int32
        prepareRequestId:
          type: string
          description: request id della relativa richiesta di prepare
    AarCreationRequestDetails:
      required:
      - aarKey
      - numberOfPages
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        aarKey:
          type: string
          description: Chiave per recupero da safe-storage del documento aar
        numberOfPages:
          type: integer
          description: numero di pagine del PDF generato
          format: int32
    AarGenerationDetails:
      required:
      - generatedAarUrl
      - numberOfPages
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        generatedAarUrl:
          type: string
          description: Chiave per recupero da safe-storage del documento aar
        numberOfPages:
          type: integer
          description: numero di pagine del PDF generato
          format: int32
    NotHandledDetails:
      required:
      - reason
      - reasonCode
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        reasonCode:
          type: string
          description: Codice motivazione casistica non gestita
        reason:
          type: string
          description: Motivazione casistica non gestita
    NotificationPaidDetailsV20:
      required:
      - paymentSourceChannel
      - recIndex
      - recipientType
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario che ha effettuato il pagamento della notifica
          format: int32
        recipientType:
          $ref: '#/components/schemas/RecipientType'
        amount:
          type: integer
          description: Importo di pagamento in eurocent
          format: int32
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        idF24:
          type: string
          description: un UUID che identifica un pagamento f24
        paymentSourceChannel:
          type: string
          description: Canale sorgente della richiesta di pagamento
        uncertainPaymentDate:
          type: boolean
          description: Indica se la data di pagamento é certa
          deprecated: true
    SendAnalogProgressDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario che ha effettuato il pagamento della notifica
          format: int32
        notificationDate:
          type: string
          format: date-time
        deliveryFailureCause:
          type: string
          description: Vedi deliveryFailureCause in SendAnalogFeedbackDetails
        deliveryDetailCode:
          type: string
          description: Vedi deliveryDetailCode in SendAnalogFeedbackDetails
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentDetails'
        sendRequestId:
          type: string
          description: RequestId della richiesta d'invio
        registeredLetterCode:
          type: string
          description: Codice della raccomandata
    SimpleRegisteredLetterProgressDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario che ha effettuato il pagamento della notifica
          format: int32
        notificationDate:
          type: string
          format: date-time
        deliveryFailureCause:
          type: string
          description: Vedi deliveryFailureCause in SendAnalogFeedbackDetails
        deliveryDetailCode:
          type: string
          description: Vedi deliveryDetailCode in SendAnalogFeedbackDetails
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentDetails'
        sendRequestId:
          type: string
          description: RequestId della richiesta d'invio
        registeredLetterCode:
          type: string
          description: Codice della raccomandata
    ProbableDateAnalogWorkflowDetails:
      required:
      - recIndex
      - schedulingAnalogDate
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario che ha effettuato il pagamento della notifica
          format: int32
        schedulingAnalogDate:
          type: string
          description: Data probabile di inizio del flusso analogico
          format: date-time
    NotificationCancellationRequestDetails:
      required:
      - cancellationRequestId
      type: object
      properties:
        cancellationRequestId:
          type: string
          description: Id della richiesta
    NotificationCancelledDetails:
      required:
      - notRefinedRecipientIndexes
      - notificationCost
      type: object
      properties:
        notificationCost:
          type: integer
          description: "costo notifica in euro cents, vale 100 * numero di recipient\
            \ not refined"
          format: int64
          example: 1220
        notRefinedRecipientIndexes:
          type: array
          items:
            type: integer
            description: indice del recipient non perfezionato
            format: int32
    PrepareAnalogDomicileFailureDetails:
      required:
      - recIndex
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario notifica digitale
          format: int32
        foundAddress:
          $ref: '#/components/schemas/PhysicalAddress'
        failureCause:
          type: string
          description: |
            __Motivazione fallimento prepare
              - __D00__ Indirizzo non trovato
              - __D01__ Indirizzo non valido
              - __D02__ Indirizzo coincidente con quello del primo tentativo
        prepareRequestId:
          type: string
          description: RequestId della richiesta di prepare
    TimelineElementDetailsV20:
      description: The raw event payload that will be different based on the event.
      oneOf:
      - $ref: '#/components/schemas/SenderAckCreationRequestDetails'
      - $ref: '#/components/schemas/NormalizedAddressDetails'
      - $ref: '#/components/schemas/NotificationRequestAcceptedDetails'
      - $ref: '#/components/schemas/AnalogFailureWorkflowDetails'
      - $ref: '#/components/schemas/AnalogSuccessWorkflowDetails'
      - $ref: '#/components/schemas/CompletelyUnreachableCreationRequestDetails'
      - $ref: '#/components/schemas/CompletelyUnreachableDetails'
      - $ref: '#/components/schemas/DigitalDeliveryCreationRequestDetails'
      - $ref: '#/components/schemas/DigitalFailureWorkflowDetails'
      - $ref: '#/components/schemas/DigitalSuccessWorkflowDetails'
      - $ref: '#/components/schemas/GetAddressInfoDetails'
      - $ref: '#/components/schemas/NotificationViewedCreationRequestDetails'
      - $ref: '#/components/schemas/NotificationViewedDetails'
      - $ref: '#/components/schemas/PublicRegistryCallDetails'
      - $ref: '#/components/schemas/PublicRegistryResponseDetails'
      - $ref: '#/components/schemas/RefinementDetails'
      - $ref: '#/components/schemas/RequestRefusedDetailsV20'
      - $ref: '#/components/schemas/ScheduleAnalogWorkflowDetails'
      - $ref: '#/components/schemas/ScheduleDigitalWorkflowDetails'
      - $ref: '#/components/schemas/ScheduleRefinementDetails'
      - $ref: '#/components/schemas/SendCourtesyMessageDetails'
      - $ref: '#/components/schemas/PrepareDigitalDetails'
      - $ref: '#/components/schemas/SendDigitalDetails'
      - $ref: '#/components/schemas/SendDigitalFeedbackDetails'
      - $ref: '#/components/schemas/SendDigitalProgressDetails'
      - $ref: '#/components/schemas/BaseAnalogDetails'
      - $ref: '#/components/schemas/SendAnalogDetails'
      - $ref: '#/components/schemas/SendAnalogFeedbackDetails'
      - $ref: '#/components/schemas/BaseRegisteredLetterDetails'
      - $ref: '#/components/schemas/SimpleRegisteredLetterDetails'
      - $ref: '#/components/schemas/AarCreationRequestDetails'
      - $ref: '#/components/schemas/AarGenerationDetails'
      - $ref: '#/components/schemas/NotHandledDetails'
      - $ref: '#/components/schemas/NotificationPaidDetailsV20'
      - $ref: '#/components/schemas/SendAnalogProgressDetails'
      - $ref: '#/components/schemas/SimpleRegisteredLetterProgressDetails'
      - $ref: '#/components/schemas/ProbableDateAnalogWorkflowDetails'
      - $ref: '#/components/schemas/NotificationCancellationRequestDetails'
      - $ref: '#/components/schemas/NotificationCancelledDetails'
      - $ref: '#/components/schemas/PrepareAnalogDomicileFailureDetails'
    NotificationAttachmentDownloadMetadataResponse:
      title: Url e metadati per il download di un allegato di una notifica
      required:
      - contentLength
      - contentType
      - filename
      - sha256
      type: object
      properties:
        filename:
          type: string
        contentType:
          type: string
          example: application/pdf
        contentLength:
          type: integer
          description: "dimensione, in byte, del contenuto."
          format: int32
          example: 54092
        sha256:
          type: string
          description: SHA256 del contenuto del file.
        url:
          type: string
          description: URL preautorizzato a cui effettuare una richiesta GET per ottenere
            il  contenuto del documento. Presente solo se il documento è pronto per
            il download.
        retryAfter:
          type: integer
          description: Stima del numero di secondi da aspettare prima che il contenuto
            del  documento sia disponibile per il download.
          format: int32
      description: |-
        I due campi più importanti sono __url__ e __retryAfter__. <br/>
          - __url__ è presente se il file è pronto per essere scaricato ed indica l'url a cui fare GET.
          - __retryAfter__ indica che il file è stato archiviato e bisognerà aspettare un numero di
            secondi non inferiore a quanto indicato dal campo _retryAfter_. <br/>
    NotificationPaymentInfo:
      title: Informazioni per effettuare il pagamento
      required:
      - creditorTaxId
      - noticeCode
      type: object
      properties:
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        noticeCodeAlternative:
          $ref: '#/components/schemas/noticeCode'
        pagoPaForm:
          $ref: '#/components/schemas/NotificationPaymentAttachment'
      description: |-
        Informazioni utili per effettuare il pagamento di una notifica, sono associate al destinatario perché le spese di notifica possono differire a seconda del canale di notifica utilizzato. <br/>
          - _noticeCode_: "codice avviso pagoPA" di pagamento del sistema pagoPA, usato per pagamento online.<br/>
          - _creditorTaxId_: codice fiscale dell'ente a cui fa riferimento il "codice avviso pagoPA". <br/>
          - _pagoPaForm_: riferimento al PDF contenete il bollettino pagoPA<br/>
    NotificationRecipient:
      required:
      - denomination
      - physicalAddress
      - recipientType
      - taxId
      type: object
      properties:
        recipientType:
          type: string
          description: "Tipologia di destinatario: Persona Fisica (PF) o Persona Giuridica\
            \ (PG)"
          enum:
          - PF
          - PG
        taxId:
          $ref: '#/components/schemas/TaxId'
        denomination:
          $ref: '#/components/schemas/Denomination'
        digitalDomicile:
          $ref: '#/components/schemas/NotificationDigitalAddress'
        physicalAddress:
          $ref: '#/components/schemas/NotificationPhysicalAddress'
        payment:
          $ref: '#/components/schemas/NotificationPaymentInfo'
      description: Informazioni sui destinatari
    NewNotificationRequest:
      required:
      - documents
      - notificationFeePolicy
      - paProtocolNumber
      - physicalCommunicationType
      - recipients
      - senderDenomination
      - senderTaxId
      - subject
      type: object
      properties:
        idempotenceToken:
          maxLength: 256
          pattern: "^[ -~]*$"
          type: string
          description: Identificativo utilizzabile dal chiamante per disambiguare
            differenti  "richieste di notificazione" effettuate con lo stesso numero
            di protocollo  (campo _paProtocolNumber_). Questo può essere necessario
            in caso di  "richiesta di notifica" rifiutata per errori nei codici di
            verifica degli allegati.
        paProtocolNumber:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: Numero di protocollo che la PA mittente assegna alla notifica
            stessa
        subject:
          maxLength: 134
          minLength: 10
          pattern: ^.*$
          type: string
          description: "titolo della notifica, NON inserire dati personali/sensibili"
        abstract:
          maxLength: 1024
          pattern: ^.*$
          type: string
          description: "descrizione sintetica della notifica, NON inserire dati personali/sensibili"
        recipients:
          type: array
          description: Informazioni sui destinatari
          items:
            $ref: '#/components/schemas/NotificationRecipient'
        documents:
          minItems: 1
          type: array
          description: Documenti notificati
          items:
            $ref: '#/components/schemas/NotificationDocument'
        notificationFeePolicy:
          $ref: '#/components/schemas/NotificationFeePolicy'
        cancelledIun:
          $ref: '#/components/schemas/IUN'
        physicalCommunicationType:
          type: string
          description: Tipologia comunicazione fisica
          enum:
          - AR_REGISTERED_LETTER
          - REGISTERED_LETTER_890
        senderDenomination:
          $ref: '#/components/schemas/Denomination'
        senderTaxId:
          $ref: '#/components/schemas/paTaxId'
        group:
          maxLength: 1024
          pattern: "^[ -~]*$"
          type: string
          description: Gruppo di utenti dell'ente mittente che può visualizzare la
            notifica
        amount:
          type: integer
          description: Importo della notifica in eurocent
          format: int32
        paymentExpirationDate:
          maxLength: 10
          minLength: 10
          pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$"
          type: string
          description: Data di scadenza del pagamento nel formato YYYY-MM-DD riferito
            all'Italia
        taxonomyCode:
          maxLength: 7
          minLength: 7
          pattern: "^([0-9]{6}[A-Z]{1})$"
          type: string
          description: "Codice tassonomico della notifica basato sulla definizione\
            \ presente nell'allegato 2 capitolo C del bando [__AVVISO PUBBLICO MISURA\
            \ 1.4.5 PIATTAFORMA NOTIFICHE DIGITALI__](https://pnrrcomuni.fondazioneifel.it/bandi_public/Bando/325)\
            \      "
          default: 010101P
        pagoPaIntMode:
          type: string
          description: "Modalitá di integrazione pagoPA per l'attualizazione del costo\
            \ della notifica. <br/> - _NONE_: nessuna attualizzazione. <br/> - _SYNC_:\
            \ modalitá sincrona. <br/> - _ASYNC_: modalitá asincrona. (Non ancora\
            \ supportata) <br/>"
          enum:
          - NONE
          - SYNC
          - ASYNC
      description: I campi utilizzati per la creazione di una nuova Notifica.
    SentNotification:
      description: Le informazioni riguardanti una richiesta di notifica accettata
      allOf:
      - $ref: '#/components/schemas/NewNotificationRequest'
      - required:
        - iun
        - sentAt
        type: object
        properties:
          senderPaId:
            maxLength: 256
            pattern: ^.*$
            type: string
            description: Identificativo (non IPA) della PA mittente che ha eseguito
              l'onboarding su SelfCare.
          iun:
            $ref: '#/components/schemas/IUN'
          sentAt:
            type: string
            description: Momento di ricezione della notifica da parte di PN
            format: date-time
          cancelledByIun:
            $ref: '#/components/schemas/IUN'
          documentsAvailable:
            type: boolean
            description: Indica se i documenti notificati sono ancora disponibili.
    TimelineElementCategory:
      type: string
      description: "stato di avanzamento del processo di notifica:`\n  * `SENDER_ACK_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'atto opponibile a terzi di presa\
        \ in carico per il mittente a safe storage\n  * `VALIDATE_NORMALIZE_ADDRESSES_REQUEST`\
        \ - Invio della richiesta di validazione e normalizzazione indirizzi fisici\
        \ presenti nella richiesta di notifica\n  * `NORMALIZED_ADDRESS` - Salvataggio\
        \ indirizzi normalizzati\n  * `REQUEST_ACCEPTED` - Richiesta di notifica accettata\
        \ a seguito dei controlli di validazione\n  * `REQUEST_REFUSED` - Richiesta\
        \ di notifica rifiutata per fallimento di validazione\n  * `SEND_COURTESY_MESSAGE`\
        \ - Invio di un messaggio di cortesia\n  * `GET_ADDRESS` - Disponibilità dell’\
        indirizzo specifico (domicilio digitale di piattaforma, domicilio digitale\
        \ speciale, domicilio digitale generale, indirizzo fisico sulla notifica o\
        \ sui registri nazionali)\n  * `PUBLIC_REGISTRY_CALL` - Richiesta ai registri\
        \ pubblici per ottenere domicilio digitale generale o per ottenere indirizzo\
        \ fisico da ANPR, da registro della imprese, da anagrafe tributaria.\n  *\
        \ `PUBLIC_REGISTRY_RESPONSE` - Ricevuta la risposta dei registri pubblici\n\
        \  * `SCHEDULE_ANALOG_WORKFLOW` - Pianificazione del workflow per invio cartaceo\n\
        \  * `SCHEDULE_DIGITAL_WORKFLOW` -Pianificazione del workflow per invio digitale\
        \ (PEC) del secondo tentativo in caso di fallimento del primo.\n  * `PREPARE_DIGITAL_DOMICILE`\
        \ - Preparazione per l’invio dell’avviso digitale.Va a valutare la timeline\
        \ per capire quale sarà il prossimo indirizzo da usare.\n  * `SEND_DIGITAL_DOMICILE`\
        \ - Invio digitale dell’avviso di notifica\n  * `SEND_DIGITAL_PROGRESS` -\
        \ Tentativo di Invio PEC ad un determinato indirizzo.\n  * `SEND_DIGITAL_FEEDBACK`\
        \ - Ottenuto esito ad un invio digitale\n  * `SCHEDULE_REFINEMENT` - Pianificato\
        \ il perfezionamento per decorrenza termini\n  * `REFINEMENT` - Perfezionamento\
        \ per decorrenza termini\n  * `DIGITAL_DELIVERY_CREATION_REQUEST` - Invio\
        \ della richiesta di creazione dell'atto opponibile a terzi di chiusura del\
        \ workflow digitale a safe storage\n  * `DIGITAL_SUCCESS_WORKFLOW` - Completato\
        \ con successo il workflow di invio digitale\n  * `DIGITAL_FAILURE_WORKFLOW`\
        \ - Completato con fallimento il workflow di invio digitale: tutti i tentativi\
        \ di invio ai domicili digitali sono falliti.\n  * `ANALOG_SUCCESS_WORKFLOW`\
        \ - Completato con successo il workflow di invio cartaceo \n  * `ANALOG_FAILURE_WORKFLOW`\
        \ - Completato con fallimento il workflow di invio cartaceo NOTA: se per tutti\
        \ i destinatari si conclude il workflow con fallimento verrà scatenato l’\
        evento COMPLETELY_UNREACHABLE\n  * `PREPARE_SIMPLE_REGISTERED_LETTER` - Invio\
        \ richiesta di prepare (preparazione ad invio) raccomandata semplice a paperChannel\n\
        \  * `SEND_SIMPLE_REGISTERED_LETTER` - Invio di raccomandata semplice\n  *\
        \ `SEND_SIMPLE_REGISTERED_LETTER_PROGRESS` - Ricezione informazioni intermedia\
        \ relative ad una notificazione cartacea semplice\n  * `NOTIFICATION_VIEWED_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'atto opponibile a terzi di presa\
        \ visione a safe storage\n  * `NOTIFICATION_VIEWED` - Visualizzazione della\
        \ notifica (perfeziona la notifica se non già perfezionata per decorrenza\
        \ termini o da altro destinatario)\n  * `PREPARE_ANALOG_DOMICILE` - Invio\
        \ richiesta di prepare (preparazione ad invio) cartaceo a paperChannel\n \
        \ * `SEND_ANALOG_DOMICILE` - Invio cartaceo dell’avviso di notifica\n  * `SEND_ANALOG_PROGRESS`\
        \ - Ricezione informazioni intermedia relative ad una notificazione cartacea\n\
        \  * `SEND_ANALOG_FEEDBACK` - Ricezione esito dell'invio cartaceo\n  * `COMPLETELY_UNREACHABLE_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'atto (simile a opponibile a terzi)\
        \ di completamento con fallimento del workflow di invio cartaceo\n  * `COMPLETELY_UNREACHABLE`\
        \ - Tutti i destinatari risultano irraggiungibili\n  * `AAR_CREATION_REQUEST`\
        \ - Invio della richiesta di creazione dell'AAR (Avviso di Avvenuta Ricezione)\
        \ a safe storage \n  * `AAR_GENERATION` - Generazione dell’AAR (Avviso di\
        \ Avvenuta Ricezione)\n  * `PAYMENT` - Ricezione pagamento della notifica\n\
        \  * `NOT_HANDLED` - Per la sperimentazione l'invio analogico non è previsto,\
        \ viene inserito tale elemento di timeline\n  * `PROBABLE_SCHEDULING_ANALOG_DATE`\
        \ - Data probabile di inizio del flusso analogico\n"
      enum:
      - SENDER_ACK_CREATION_REQUEST
      - VALIDATE_NORMALIZE_ADDRESSES_REQUEST
      - NORMALIZED_ADDRESS
      - REQUEST_ACCEPTED
      - SEND_COURTESY_MESSAGE
      - GET_ADDRESS
      - PUBLIC_REGISTRY_CALL
      - PUBLIC_REGISTRY_RESPONSE
      - SCHEDULE_ANALOG_WORKFLOW
      - SCHEDULE_DIGITAL_WORKFLOW
      - PREPARE_DIGITAL_DOMICILE
      - SEND_DIGITAL_DOMICILE
      - SEND_DIGITAL_PROGRESS
      - SEND_DIGITAL_FEEDBACK
      - REFINEMENT
      - SCHEDULE_REFINEMENT
      - DIGITAL_DELIVERY_CREATION_REQUEST
      - DIGITAL_SUCCESS_WORKFLOW
      - DIGITAL_FAILURE_WORKFLOW
      - ANALOG_SUCCESS_WORKFLOW
      - ANALOG_FAILURE_WORKFLOW
      - PREPARE_SIMPLE_REGISTERED_LETTER
      - SEND_SIMPLE_REGISTERED_LETTER
      - SEND_SIMPLE_REGISTERED_LETTER_PROGRESS
      - NOTIFICATION_VIEWED_CREATION_REQUEST
      - NOTIFICATION_VIEWED
      - PREPARE_ANALOG_DOMICILE
      - SEND_ANALOG_DOMICILE
      - SEND_ANALOG_PROGRESS
      - SEND_ANALOG_FEEDBACK
      - PAYMENT
      - COMPLETELY_UNREACHABLE
      - COMPLETELY_UNREACHABLE_CREATION_REQUEST
      - REQUEST_REFUSED
      - AAR_CREATION_REQUEST
      - AAR_GENERATION
      - NOT_HANDLED
      - PROBABLE_SCHEDULING_ANALOG_DATE
    NotificationRefusedError:
      type: object
      properties:
        errorCode:
          type: string
          description: |-
            Errori di rifiuto della notifica.
              - FILE_NOTFOUND
              - FILE_SHA_ERROR
              - TAXID_NOT_VALID
              - SERVICE_UNAVAILABLE
              - FILE_PDF_INVALID_ERROR
              - FILE_PDF_TOOBIG_ERROR
              - NOT_VALID_ADDRESS
              - RECIPIENT_ID_NOT_VALID
        detail:
          type: string
    RequestRefusedDetails:
      type: object
      properties:
        refusalReasons:
          type: array
          description: Motivazioni che hanno portato al rifiuto della notifica
          items:
            $ref: '#/components/schemas/NotificationRefusedError'
    NotificationPaidDetails:
      required:
      - paymentSourceChannel
      - recIndex
      - recipientType
      type: object
      properties:
        recIndex:
          type: integer
          description: Index destinatario che ha effettuato il pagamento della notifica
          format: int32
        recipientType:
          $ref: '#/components/schemas/RecipientType'
        amount:
          type: integer
          description: Importo di pagamento in eurocent
          format: int32
        creditorTaxId:
          $ref: '#/components/schemas/paTaxId'
        noticeCode:
          $ref: '#/components/schemas/noticeCode'
        idF24:
          type: string
          description: un UUID che identifica un pagamento f24
        paymentSourceChannel:
          type: string
          description: Canale sorgente della richiesta di pagamento
        uncertainPaymentDate:
          type: boolean
          description: Indica se la data di pagamento é certa
    TimelineElementDetails:
      description: The raw event payload that will be different based on the event.
      oneOf:
      - $ref: '#/components/schemas/SenderAckCreationRequestDetails'
      - $ref: '#/components/schemas/NormalizedAddressDetails'
      - $ref: '#/components/schemas/NotificationRequestAcceptedDetails'
      - $ref: '#/components/schemas/AnalogFailureWorkflowDetails'
      - $ref: '#/components/schemas/AnalogSuccessWorkflowDetails'
      - $ref: '#/components/schemas/CompletelyUnreachableCreationRequestDetails'
      - $ref: '#/components/schemas/CompletelyUnreachableDetails'
      - $ref: '#/components/schemas/DigitalDeliveryCreationRequestDetails'
      - $ref: '#/components/schemas/DigitalFailureWorkflowDetails'
      - $ref: '#/components/schemas/DigitalSuccessWorkflowDetails'
      - $ref: '#/components/schemas/GetAddressInfoDetails'
      - $ref: '#/components/schemas/NotificationViewedCreationRequestDetails'
      - $ref: '#/components/schemas/NotificationViewedDetails'
      - $ref: '#/components/schemas/PublicRegistryCallDetails'
      - $ref: '#/components/schemas/PublicRegistryResponseDetails'
      - $ref: '#/components/schemas/RefinementDetails'
      - $ref: '#/components/schemas/RequestRefusedDetails'
      - $ref: '#/components/schemas/ScheduleAnalogWorkflowDetails'
      - $ref: '#/components/schemas/ScheduleDigitalWorkflowDetails'
      - $ref: '#/components/schemas/ScheduleRefinementDetails'
      - $ref: '#/components/schemas/SendCourtesyMessageDetails'
      - $ref: '#/components/schemas/PrepareDigitalDetails'
      - $ref: '#/components/schemas/SendDigitalDetails'
      - $ref: '#/components/schemas/SendDigitalFeedbackDetails'
      - $ref: '#/components/schemas/SendDigitalProgressDetails'
      - $ref: '#/components/schemas/BaseAnalogDetails'
      - $ref: '#/components/schemas/SendAnalogDetails'
      - $ref: '#/components/schemas/SendAnalogFeedbackDetails'
      - $ref: '#/components/schemas/BaseRegisteredLetterDetails'
      - $ref: '#/components/schemas/SimpleRegisteredLetterDetails'
      - $ref: '#/components/schemas/AarCreationRequestDetails'
      - $ref: '#/components/schemas/AarGenerationDetails'
      - $ref: '#/components/schemas/NotHandledDetails'
      - $ref: '#/components/schemas/NotificationPaidDetails'
      - $ref: '#/components/schemas/SendAnalogProgressDetails'
      - $ref: '#/components/schemas/SimpleRegisteredLetterProgressDetails'
      - $ref: '#/components/schemas/ProbableDateAnalogWorkflowDetails'
    PersonalData:
      type: object
      properties:
        surname:
          pattern: "^[A-Z\\\\s]{1,24}$"
          type: string
          description: surname of the person
        name:
          pattern: "^[A-Z\\\\s]{1,20}$"
          type: string
          description: name of the person
        birthDate:
          pattern: "^\\d{2}-\\d{2}-\\d{4}$"
          type: string
          description: birthdate of the person
        sex:
          pattern: "^[FM]$"
          type: string
          description: indicate if is (F)emale or (M)ale
        birthPlace:
          pattern: "^[A-Z\\s]{1,40}$"
          type: string
          description: birth place of the person
        birthProvince:
          pattern: "^[A-Z]{2}$"
          type: string
          description: birth province of the person
      description: Personal Data (Dati Anagrafici) object
    TaxAddress:
      type: object
      properties:
        municipality:
          pattern: "^[A-Z]{1,40}$"
          type: string
          description: municipality of the tax address
        province:
          pattern: "^[A-Z]{2}$"
          type: string
          description: province of the tax address
        address:
          pattern: "^[A-Z0-9\\s.]{1,35}$"
          type: string
          description: street and house number of the tax address
      description: Tax Residence (Domicilio Fiscale) object
    PersonData:
      type: object
      properties:
        personalData:
          $ref: '#/components/schemas/PersonalData'
        taxAddress:
          $ref: '#/components/schemas/TaxAddress'
      description: Person Data (Dati Anagrafici PF) object
    CompanyData:
      type: object
      properties:
        name:
          pattern: "^[A-Z\\s]{1,60}$"
          type: string
          description: Company name
        taxAddress:
          $ref: '#/components/schemas/TaxAddress'
      description: Company Data (Dati Anagrafici PNF) object
    TaxPayerStandard:
      type: object
      properties:
        taxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: Tax Payer Tax Code
        isNotTaxYear:
          type: boolean
          description: field that show if the current year is included
        person:
          $ref: '#/components/schemas/PersonData'
        company:
          $ref: '#/components/schemas/CompanyData'
        relativePersonTaxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: It is the tax code of a relative of the main tax payer
        id:
          pattern: "^[A-Z0-9]{2}$"
          type: string
          description: identification code
    IncludeNotificationCost:
      required:
      - applyCost
      type: object
      properties:
        applyCost:
          type: boolean
          description: to check if include notification cost
          nullable: false
    Tax:
      type: object
      properties:
        taxType:
          pattern: "^[A-Z0-9]{4}$"
          type: string
          description: identification code of the type of tax
        installment:
          pattern: "^[A-Z0-9]{0,4}$"
          type: string
          description: identification code of the ente
        year:
          pattern: "^[1-2][0-9]{3}$"
          type: string
          description: reference year of the tax
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount of the tax
        credit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: credit amount of the tax
      description: Tax object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    TreasurySection:
      type: object
      properties:
        records:
          type: array
          description: list of the taxes
          items:
            $ref: '#/components/schemas/Tax'
        office:
          pattern: "^[A-Z0-9]{3}$"
          type: string
          description: identification code of the office
        document:
          pattern: "^\\d{11}$"
          type: string
          description: identification code of the document
      description: Treasury Section (Sezione Erario) object
    Period:
      type: object
      properties:
        startDate:
          pattern: "^[0-9]{6}$"
          type: string
          description: start date of the period
        endDate:
          pattern: "^[0-9]{6}$"
          type: string
          description: end date of the period
      description: Reporting Period (Sezione INPS) object
    InpsRecord:
      type: object
      properties:
        office:
          pattern: "^[0-9]{3,4}$"
          type: string
          description: identification code of the office
        reason:
          pattern: "^[A-Z-]{3,4}$"
          type: string
          description: contribution reason for the record
        inps:
          pattern: "^[A-Za-z0-9\\s]{0,17}$"
          type: string
          description: INPS identification code
        period:
          $ref: '#/components/schemas/Period'
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount of the record
        credit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: credit amount of the record
      description: INPS Record object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    InpsSection:
      type: object
      properties:
        records:
          type: array
          description: INPS Record List
          items:
            $ref: '#/components/schemas/InpsRecord'
      description: INPS Section (Sezione INPS) object
    RegionRecord:
      type: object
      properties:
        region:
          pattern: "^[0-9]{2}$"
          type: string
          description: region identification code
        taxType:
          pattern: "^[0-9A-Z]{4}$"
          type: string
          description: identification code of the type of tax
        installment:
          pattern: "^[A-Z0-9]{0,4}$"
          type: string
          description: identification code of the ente
        year:
          pattern: "^[1-2][0-9]{3}$"
          type: string
          description: reference year
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount of the record
        credit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: credit amount of the record
      description: Region Record object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    RegionSection:
      type: object
      properties:
        records:
          type: array
          description: Region Record List
          items:
            $ref: '#/components/schemas/RegionRecord'
      description: Region Section (Sezione Regioni) object
    LocalTaxRecord:
      required:
      - municipality
      - taxType
      type: object
      properties:
        municipality:
          pattern: "^[0-9A-Z]{4}$"
          type: string
          description: identification code of the municipality
        reconsideration:
          type: boolean
          description: to check if it is a reconsideration act
        propertiesChanges:
          type: boolean
          description: to check if there are some changes in properties list
        advancePayment:
          type: boolean
          description: to check if it is a payment in advance
        fullPayment:
          type: boolean
          description: to check if it a full payment
        numberOfProperties:
          pattern: "^[0-9]{3}$"
          type: string
          description: number of properties
        taxType:
          pattern: "^[0-9]{4}$"
          type: string
          description: identification code of the type of tax
        installment:
          pattern: "^[A-Z0-9]{0,4}$"
          type: string
          description: identification code of the ente
        year:
          pattern: "^[1-2][0-9]{3}$"
          type: string
          description: reference year
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount of the record
        credit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: credit amount of the record
      description: LocalTax Record object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    LocalTaxSection:
      type: object
      properties:
        operationId:
          pattern: "^[A-Z0-9]{18}$"
          type: string
          description: identification code of the operation
        records:
          type: array
          items:
            $ref: '#/components/schemas/LocalTaxRecord'
        deduction:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: if there are any deduction
      description: LocalTax Section (Sezione LocalTax e Altri Tributi Locali) object
    InailRecord:
      type: object
      properties:
        office:
          pattern: "^[0-9]{5}$"
          type: string
          description: identification code of the office
        company:
          pattern: "^[0-9]{8}$"
          type: string
          description: identification code of the company
        control:
          pattern: "^[0-9]{2}$"
          type: string
          description: control identification code
        refNumber:
          pattern: "^[0-9]{6}$"
          type: string
          description: reference number
        reason:
          pattern: "^[A-Z0-9]$"
          type: string
          description: reason of the record
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount of the record
        credit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: credit amount of the record
      description: INAIL Record object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    SocialSecurityRecord:
      type: object
      properties:
        institution:
          pattern: "^[0-9]{4}$"
          type: string
          description: identification code of the institution
        office:
          pattern: "^[0-9A-Z]{5}$"
          type: string
          description: identification code of the office
        reason:
          pattern: "^[0-9A-Z]{3,4}$"
          type: string
          description: reason of the contribution
        position:
          pattern: "^[0-9]{9}$"
          type: string
          description: identification code of the position
        period:
          $ref: '#/components/schemas/Period'
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount of the record
        credit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: credit amount of the record
      description: Social Security Record object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    SocialSecuritySection:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/InailRecord'
        socSecRecords:
          type: array
          description: Social Security Record List
          items:
            $ref: '#/components/schemas/SocialSecurityRecord'
      description: Social Security Section (Sezione Altri Enti Previdenziali) object
    F24Standard:
      type: object
      properties:
        taxPayer:
          $ref: '#/components/schemas/TaxPayerStandard'
        treasury:
          $ref: '#/components/schemas/TreasurySection'
        inps:
          $ref: '#/components/schemas/InpsSection'
        region:
          $ref: '#/components/schemas/RegionSection'
        localTax:
          $ref: '#/components/schemas/LocalTaxSection'
        socialSecurity:
          $ref: '#/components/schemas/SocialSecuritySection'
    TaxPayerSimplified:
      type: object
      properties:
        taxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: Tax Payer Tax Code
        personalData:
          $ref: '#/components/schemas/PersonalData'
        relativePersonTaxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: It is the tax code of a relative of the main tax payer
        id:
          pattern: "^[A-Z0-9]{2}$"
          type: string
          description: identification code
        document:
          pattern: "^\\d{11}$"
          type: string
          description: identification code of the document
        office:
          pattern: "^[A-Z0-9]{3}$"
          type: string
          description: identification code of the office
    SimplifiedPaymentRecord:
      required:
      - section
      properties:
        section:
          pattern: ^(ER|RG|EL)$
          type: string
          description: section code (ER|RG|EL)
      description: Payment Reason Record object
      allOf:
      - $ref: '#/components/schemas/LocalTaxRecord'
    SimplifiedPaymentSection:
      type: object
      properties:
        operationId:
          pattern: "^[A-Z0-9]{18}$"
          type: string
          description: identification code of the operation
        records:
          type: array
          description: Payments Record List
          items:
            $ref: '#/components/schemas/SimplifiedPaymentRecord'
      description: Payment Reason Section (Motivo del Pagamento) object
    F24Simplified:
      type: object
      properties:
        taxPayer:
          $ref: '#/components/schemas/TaxPayerSimplified'
        payments:
          $ref: '#/components/schemas/SimplifiedPaymentSection'
    TaxPayerExcise:
      type: object
      properties:
        taxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: Tax Payer Tax Code
        isNotTaxYear:
          type: boolean
          description: field that show if the current year is included
        person:
          $ref: '#/components/schemas/PersonData'
        company:
          $ref: '#/components/schemas/CompanyData'
        relativePersonTaxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: It is the tax code of a relative of the main tax payer
        id:
          pattern: "^[A-Z0-9]{2}$"
          type: string
          description: identification code
    ExciseTax:
      type: object
      properties:
        institution:
          pattern: "^[A-Z]{2}$"
          type: string
          description: institution of the tax
        province:
          pattern: "^[A-Z]{2}$"
          type: string
          description: province of the tax
        id:
          pattern: "^[A-Z0-9]{17}$"
          type: string
          description: identification code
        taxType:
          pattern: "^[0-9A-Z]{4}$"
          type: string
          description: identification code of the type of tax
        installment:
          pattern: "^[A-Z0-9]{0,4}$"
          type: string
          description: identification code of the ente
        month:
          pattern: "^[0-1][0-9]$"
          type: string
          description: month reference
        year:
          pattern: "^[1-2][0-9]{3}$"
          type: string
          description: reference year
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount
      description: Excise Tax object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    ExciseSection:
      type: object
      properties:
        records:
          type: array
          description: Excise Tax List
          items:
            $ref: '#/components/schemas/ExciseTax'
        office:
          pattern: "^[A-Z0-9]{3}$"
          type: string
          description: identification code of the office
        document:
          pattern: "^\\d{11}$"
          type: string
          description: identification code of the document
      description: Excise Section (Accise) object
    F24Excise:
      type: object
      properties:
        taxPayer:
          $ref: '#/components/schemas/TaxPayerExcise'
        treasury:
          $ref: '#/components/schemas/TreasurySection'
        inps:
          $ref: '#/components/schemas/InpsSection'
        region:
          $ref: '#/components/schemas/RegionSection'
        localTax:
          $ref: '#/components/schemas/LocalTaxSection'
        excise:
          $ref: '#/components/schemas/ExciseSection'
      description: F24 Excise (Accise) object
    TaxPayerElide:
      type: object
      properties:
        taxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: Tax Payer Tax Code
        person:
          $ref: '#/components/schemas/PersonData'
        company:
          $ref: '#/components/schemas/CompanyData'
        relativePersonTaxCode:
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: It is the tax code of a relative of the main tax payer
        id:
          pattern: "^[A-Z0-9]{2}$"
          type: string
          description: identification code
    TreasuryRecord:
      type: object
      properties:
        type:
          pattern: "^[A-Z]$"
          type: string
          description: type of treasury
        id:
          pattern: "^[A-Z0-9]{17}$"
          type: string
          description: identification code of the element
        taxType:
          pattern: "^[A-Z0-9]{4}$"
          type: string
          description: identification code of the type of tax
        year:
          pattern: "^[1-2][0-9]{3}$"
          type: string
          description: referance year
        debit:
          pattern: "^[0-9]{3,15}$"
          type: string
          description: debit amount of the record
      description: Treasury Record object
      allOf:
      - $ref: '#/components/schemas/IncludeNotificationCost'
    TreasuryAndOtherSection:
      type: object
      properties:
        office:
          pattern: "^[A-Z0-9]{3}$"
          type: string
          description: identification code of the office
        document:
          pattern: "^\\d{11}$"
          type: string
          description: identification code of the document
        records:
          type: array
          description: Treasury Records
          items:
            $ref: '#/components/schemas/TreasuryRecord'
      description: Treasury ans Other Section (Sezione Erario e Altro) object
    F24Elid:
      type: object
      properties:
        taxPayer:
          $ref: '#/components/schemas/TaxPayerElide'
        treasury:
          $ref: '#/components/schemas/TreasuryAndOtherSection'
    StatusDetail:
      required:
      - code
      type: object
      properties:
        code:
          type: string
          description: "Internal code of the error or warning, in human-readable format"
          example: "NOTIFICATION_CANCELLATION_ACCEPTED, NOTIFICATION_ALREADY_CANCELLED"
        level:
          type: string
          description: |
            informational level of status detail: INFO,WARN, ERR
            ERR (error) by default
          example: INFO
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of
            the problem.
          example: Parameter not valid
      description: Detail of response to cancellation async call
    LegalFactListElement:
      required:
      - iun
      - legalFactsId
      type: object
      properties:
        taxId:
          maxLength: 16
          minLength: 11
          pattern: "^([A-Z]{6}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{2}[A-Z]{1}[0-9LMNPQRSTUV]{3}[A-Z]{1})|([0-9]{11})$"
          type: string
          description: Valorizzato se l'atto si riferisce a uno specifico destinatario
        iun:
          maxLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
          description: Identificativo Univoco Notifica a cui l'atto è associato
        legalFactsId:
          $ref: '#/components/schemas/LegalFactsId'
      description: Informazioni relative ad un atto opponibile a terzi
    LegalFactList:
      title: Elenco atti opponibili
      type: array
      description: Elenco degli atti opponibili a terzi correlati a una notifica
      items:
        $ref: '#/components/schemas/LegalFactListElement'
    DocumentCategory:
      title: Tipi di documenti
      type: string
      description: Tipologie di documenti
      enum:
      - AAR
    DocumentDownloadMetadataResponse:
      title: Url e metadati per il download di un documento correlato alla notifica
      required:
      - contentLength
      - filename
      type: object
      properties:
        filename:
          type: string
        contentLength:
          type: number
          description: "dmensione, in byte, del contenuto."
          format: decimal32
          example: 54092
        url:
          type: string
          description: URL preautorizzato a cui effettuare una richiesta GET per ottenere
            il  contenuto del documento. Presente solo se il documento è pronto per
            il download.
        retryAfter:
          type: number
          description: Stima del numero di secondi da aspettare prima che il contenuto
            del  documento sia scaricabile.
          format: decimal32
      description: |-
        I due campi più importanti sono __url__ e __retryAfter__. <br/>
          - __url__ è presente se il file è pronto per essere scaricato ed indica l'url a cui fare GET.
          - __retryAfter__ indica che il file non è stato archiviato e bisognerà aspettare un numero di
            secondi non inferiore a quanto indicato dal campo _retryAfter_. <br/>
    StreamCreationRequest:
      required:
      - eventType
      - title
      type: object
      properties:
        title:
          maxLength: 256
          pattern: ^.*$
          type: string
          description: Nome sintetico dello stream
        eventType:
          type: string
          description: |-
            Tipo di eventi presenti nel flusso:
              - _STATUS_: cambiamenti di stato delle notifiche
              - _TIMELINE_: eventi a granularità fine
          enum:
          - STATUS
          - TIMELINE
        filterValues:
          type: array
          description: "rappresenta l'elenco degli stati o elementi di timeline che\
            \ si vogliono filtrare; inserendo un array vuoto [] si riceveranno solo\
            \ gli elementi relativi a v1"
          items:
            maxLength: 256
            minLength: 4
            pattern: "^[A-Z_]+$"
            type: string
      description: Richiesta di creazione di uno stream di eventi di avanzamento delle
        notifiche.
    StreamMetadataResponse:
      description: Configurazioni di un flusso di eventi
      allOf:
      - $ref: '#/components/schemas/StreamCreationRequest'
      - required:
        - activationDate
        - streamId
        type: object
        properties:
          streamId:
            type: string
            description: Identificativo del flusso di eventi
            format: uuid
          activationDate:
            type: string
            description: Timestamp in cui il flusso di eventi è stato attivato
            format: date-time
    StreamListResponse:
      type: array
      description: Elenco di flussi di eventi
      items:
        $ref: '#/components/schemas/StreamListElement'
    StreamListElement:
      required:
      - streamId
      - title
      type: object
      properties:
        streamId:
          type: string
          format: uuid
        title:
          maxLength: 256
          pattern: ^.*$
          type: string
    ProgressResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProgressResponseElement'
    ProgressResponseElement:
      required:
      - eventId
      - timestamp
      type: object
      properties:
        eventId:
          type: string
          description: Elemento che garantisce univocità e ordinamento temporale all'interno
            dello stream
        timestamp:
          type: string
          description: Istante a cui è avvenuto l'evento
          format: date-time
        notificationRequestId:
          type: string
          description: Identificativo della richiesta di notifica
        iun:
          maxLength: 25
          pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
          type: string
          description: "Identificativo della notifica, presente solo se la richiesta\
            \ di notifica è  stata accettata."
        newStatus:
          $ref: '#/components/schemas/NotificationStatus'
        timelineEventCategory:
          $ref: '#/components/schemas/TimelineElementCategoryV20'
        recipientIndex:
          minimum: 0
          type: integer
          description: Indice del destinatario al quale si riferisce l'evento
          format: int32
        analogCost:
          type: integer
          description: Eventuale costo in eurocent associato all'evento
          format: int32
        channel:
          type: string
          description: "Canale a cui si riferisce l'evento. I valori previsti sono:\
            \ - Per eventi legati a messaggi di cortesia: APPIO, SMS, EMAIL - Per\
            \ eventi legati all'invio digitale: PEC - Per eventi legati all'invio\
            \ analogico: AR_REGISTERED_LETTER, REGISTERED_LETTER_890 - Per eventi\
            \ legati all'invio di raccomandate semplici: SIMPLE_REGISTERED_LETTER"
        legalfactIds:
          type: array
          description: chiavi degli eventuali allegati associati all'evento
          example:
          - PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9Q
          - PN_LEGAL_FACTS-0002-9G2S-RK3M-JI62-JK9E
          items:
            type: string
        validationErrors:
          type: array
          description: eventuali errori di validazione associati all'evento
          items:
            $ref: '#/components/schemas/RefusedReason'
    RefusedReason:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
  parameters:
    notificationRequestId:
      name: notificationRequestId
      in: query
      description: identificativo della richiesta di notifica
      required: false
      style: form
      explode: true
      schema:
        maxLength: 36
        pattern: "^[A-Za-z0-9+/=]{36}$"
        type: string
    paProtocolNumber:
      name: paProtocolNumber
      in: query
      description: "Numero di protocollo associato alla notifica, può essere riutilizzato\
        \ per rettifiche."
      required: false
      style: form
      explode: true
      schema:
        maxLength: 256
        pattern: ^.*$
        type: string
    idempotenceToken:
      name: idempotenceToken
      in: query
      description: token usato per disambiguare "richieste di notificazione" effettuate
        con lo stesso  numero di protocollo.
      required: false
      style: form
      explode: true
      schema:
        maxLength: 256
        pattern: "^[ -~]*$"
        type: string
    pathDocumentIdx:
      name: docIdx
      in: path
      description: indice del documento nella lista partendo da 0.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int32
    pathRecipientIdx:
      name: recipientIdx
      in: path
      description: indice del destinatario nella lista partendo da 0.
      required: true
      style: simple
      explode: false
      schema:
        type: integer
        format: int32
    pathAttachmentName:
      name: attachmentName
      in: path
      description: Tipologia del pagamento allegato alla notifica. Valori possibili
        PAGOPA|F24
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 6
        minLength: 3
        pattern: PAGOPA|F24
        type: string
    attachmentIdx:
      name: attachmentIdx
      in: query
      description: indice del documento di pagamento partendo da 0
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int32
    pathLegalFactType:
      name: legalFactType
      in: path
      description: Categoria dell'atto opponibile a terzi
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/LegalFactCategory'
    pathLegalFactId:
      name: legalFactId
      in: path
      description: Identificativo dell'atto opponibile a terzi
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 1024
        pattern: "^[ -~]*$"
        type: string
    pathIun:
      name: iun
      in: path
      description: Identificativo Univoco Notifica
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 25
        minLength: 25
        pattern: "^[A-Z]{4}-[A-Z]{4}-[A-Z]{4}-[0-9]{6}-[A-Z]{1}-[0-9]{1}$"
        type: string
    legalFactsSearchMandateId:
      name: mandateId
      in: query
      description: "identificativo della delega, non utilizzato nelle API B2B"
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: uuid
      x-pn-intended-usage:
      - WEB
    pathDocumentType:
      name: documentType
      in: path
      description: Categoria documento
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/DocumentCategory'
    queryDocumentId:
      name: documentId
      in: query
      description: Identificativo del documento
      required: true
      style: form
      explode: true
      schema:
        maxLength: 512
        pattern: "^(safestorage:\\/\\/)?[A-Za-z0-9._-]+$"
        type: string
    queryLastEventId:
      name: lastEventId
      in: query
      description: "Identificativo dell'ultimo evento memorizzato dal chiamante, se\
        \ non passato si intende dal primo evento presente nello stream. Numero in\
        \ una stringa di 38 caratteri con padding iniziale composto da '0'."
      required: false
      style: form
      explode: true
      schema:
        maxLength: 38
        minLength: 38
        pattern: "^0\\d{37}$"
        type: string
    pathStreamId:
      name: streamId
      in: path
      description: Identificativo dello stream di eventi
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
